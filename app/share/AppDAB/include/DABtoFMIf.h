/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c DABtoFMIf -p DABtoFMIf.h:DABtoFMIf.cpp com.lge.car.micom.dab.xml
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DABTOFMIF_H_1363595935
#define DABTOFMIF_H_1363595935

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.lge.car.micom.dab
 */
class DABtoFMIf: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.lge.car.micom.dab"; }

public:
    DABtoFMIf(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~DABtoFMIf();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> LgeDBus_DABPICodeRequest(const QByteArray &in)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in);
        return asyncCallWithArgumentList(QLatin1String("LgeDBus_DABPICodeRequest"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void LgeDBus_EventDABPISensitivity(const QByteArray &out);
};

namespace com {
  namespace lge {
    namespace car {
      namespace micom {
        typedef ::DABtoFMIf dab;
      }
    }
  }
}
#endif
