commit 661a7497cc88aebdee32bf31c219d457ca143590
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Sep 25 11:28:42 2010 +0100

    Release JSON-GLib 0.12.0

 NEWS         |    1 +
 README       |    6 +++---
 configure.ac |    4 ++--
 3 files changed, 6 insertions(+), 5 deletions(-)

commit 9b6acd68e156a45cc845bdebd99c174e82d0677c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Sep 25 11:50:38 2010 +0100

    gobject: Fix deserialization of construct-only properties
    
    Commit 2d7550948dfb2e5907b851bc2c4bd296a7526086 broke the construct-only
    properties; we now only check for the G_PARAM_CONSTRUCT_ONLY flag, and
    pass construct-only properties to g_object_newv(); all the properties
    flagged as G_PARAM_CONSTRUCT gets passed with the rest of the properties
    after that.

 json-glib/json-gobject.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit d480f2e77e3dc0d00fc617686b306f96353b7177
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Sep 25 11:49:41 2010 +0100

    test-serialize-full: Remove the dummy deserialize implementation
    
    If you don't override JsonSerializable, you get the default behaviour
    anyway.

 tests/test-serialize-full.c |   15 +--------------
 1 files changed, 1 insertions(+), 14 deletions(-)

commit ff5dd56e4f864d0c015dcd66fa852f9cf7cf90dd
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Sep 25 11:49:19 2010 +0100

    debug: Add debug notes in the GObject code

 json-glib/json-gobject.c      |   14 ++++++++++++--
 json-glib/json-serializable.c |    3 +++
 2 files changed, 15 insertions(+), 2 deletions(-)

commit 7707b18f42b3a19dd780ba73ce1dabb6b8ef3c95
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Sep 25 11:48:25 2010 +0100

    debug: Add debug flags for GObject-related code

 json-glib/json-debug.c |    3 ++-
 json-glib/json-debug.h |    3 ++-
 2 files changed, 4 insertions(+), 2 deletions(-)

commit c6bf7ecb0a836b5b43f203cb22be577bd54b9e9a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Sep 25 11:23:43 2010 +0100

    introspection: Update to 0.9.5
    
    Add --warn-all for the scanner flags.
    
    Also, undefine JSON_DISABLE_DEPRECATED, to introspect deprecated API.

 configure.ac          |    2 +-
 json-glib/Makefile.am |    4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

commit 617286e4d38a93e41e1e1d974d01c1d73fd2ff66
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Sep 25 11:23:10 2010 +0100

    Add introspection annotations

 json-glib/json-array.c   |    4 ++--
 json-glib/json-gboxed.c  |   14 +++++++-------
 json-glib/json-gobject.c |    4 ++--
 json-glib/json-object.c  |    4 ++--
 4 files changed, 13 insertions(+), 13 deletions(-)

commit 19b0b873c07f918e06a8610f27a439334334a83d
Author: Colin Walters <walters@verbum.org>
Date:   Thu Sep 9 10:24:53 2010 -0400

    introspection: Export json-glib-1.0 pkg-config file

 json-glib/Makefile.am |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit d05e919208a47c18d001ac08900b4d2837efd4b4
Author: Luca Bruno <lethalman88@gmail.com>
Date:   Sun Aug 15 20:30:21 2010 +0200

    docs: Add transfer none annotation to JsonBuilder return values.

 json-glib/json-builder.c |   22 +++++++++++-----------
 1 files changed, 11 insertions(+), 11 deletions(-)

commit 2c3062cbd79826b184a6f613c519e69f3ddc1ec6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Aug 15 18:46:02 2010 +0100

    builder: Add Since: annotations

 json-glib/json-builder.h |   54 +++++++++++++++++++++++++--------------------
 1 files changed, 30 insertions(+), 24 deletions(-)

commit 2d7550948dfb2e5907b851bc2c4bd296a7526086
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Aug 15 18:44:13 2010 +0100

    gobject: Use construct and construct-only properties
    
    Right now, we're checking twice for G_PARAM_CONSTRUCT_ONLY, but what we
    really want is to check for both G_PARAM_CONSTRUCT and
    G_PARAM_CONSTRUCT_ONLY properties when creating a new instance from a
    JSON definition.

 json-glib/json-gobject.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit be48afe5801a541996bb64437c278088e70258f6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Aug 15 18:43:49 2010 +0100

    build: Use maintainer-clean for removing ignore files

 build/autotools/Makefile.am.gitignore |   11 ++++++++---
 1 files changed, 8 insertions(+), 3 deletions(-)

commit 5732cadfab58435ded4e88b0733c1a46aa0dcd2d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Aug 14 12:55:18 2010 +0100

    build: Automate ignoring test binaries
    
    Use noinst_PROGRAMS to generate the list of test binaries to ignore
    directly in the test directories.

 .gitignore                            |   11 -----------
 build/autotools/Makefile.am           |    3 ++-
 build/autotools/Makefile.am.gitignore |   19 +++++++++++++++++++
 json-glib/tests/Makefile.am           |    4 ++++
 tests/Makefile.am                     |    4 ++++
 5 files changed, 29 insertions(+), 12 deletions(-)

commit 8b54bed521b609c373a48d27c880cc70272b6313
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Aug 14 12:26:29 2010 +0100

    docs: Add 0.12 symbols index to the API reference

 doc/reference/json-glib-docs.xml |    5 +++++
 1 files changed, 5 insertions(+), 0 deletions(-)

commit 9ed8d5e7fe96b9dcf82ddbba7de2db40d415cbaf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Aug 14 12:24:59 2010 +0100

    reader: Add :root constructor property
    
    A JsonReader is useless without a root JsonNode to start walking the
    tree from.

 json-glib/json-reader.c       |   96 +++++++++++++++++++++++++++++++++++++---
 json-glib/json-reader.h       |    2 +-
 json-glib/tests/reader-test.c |    4 +-
 3 files changed, 91 insertions(+), 11 deletions(-)

commit eeeae2194223abe2515e18edec1bdbbb6a7c793d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Aug 14 09:40:44 2010 +0100

    docs: Add the RFC draft for JSON schema

 doc/draft-zyp-json-schema-02.txt | 1345 ++++++++++++++++++++++++++++++++++++++
 1 files changed, 1345 insertions(+), 0 deletions(-)

commit 0281176789b38973b1723f752070cb0e7340055d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 12 16:09:45 2010 +0100

    reader: Do not wrap JsonParser
    
    Since JsonParser has far more methods for parsing a JSON stream we
    should just make JsonReader an API for reading an already parsed JSON
    tree - in the same way that JsonBuilder does not generate the
    stringified version of the JSON tree it builds.

 doc/reference/json-glib-sections.txt |    2 +-
 json-glib/json-reader.c              |   90 +++++++++++-----------------------
 json-glib/json-reader.h              |    6 +--
 json-glib/tests/reader-test.c        |   11 +++-
 4 files changed, 41 insertions(+), 68 deletions(-)

commit 149d2f3925ca798886f2137ae73488f7e2e6386b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 12 15:55:54 2010 +0100

    reader: Mirror the JsonBuilder API value accessors
    
    We should strive to make JsonBuilder and JsonReader similar in API.

 doc/reference/json-glib-sections.txt |   10 +++++-----
 json-glib/json-reader.c              |   34 +++++++++++++++++-----------------
 json-glib/json-reader.h              |   10 +++++-----
 json-glib/tests/reader-test.c        |    8 ++++----
 4 files changed, 31 insertions(+), 31 deletions(-)

commit b385ca3ae47e68cdf48f3641385b9fe5ac8429bc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 12 15:35:17 2010 +0100

    docs: Update NEWS

 NEWS |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

commit 23866cb9935e9b9f7c88b26cdfc13ff95edfbe00
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 12 15:34:09 2010 +0100

    docs: Add JsonReader to the API reference

 doc/reference/json-glib-docs.xml     |    1 +
 doc/reference/json-glib-sections.txt |   41 ++++++++++++++++++++++++++++++++++
 doc/reference/json-glib.types        |    2 +
 3 files changed, 44 insertions(+), 0 deletions(-)

commit 10e5a1d38113b7b6e7c71da76ff11219baf1022d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 12 15:29:41 2010 +0100

    Add JsonReader
    
    JsonReader is a simple, cursor-based API for parsing a JSON DOM. It is
    similar, in spirit, to the XmlReader API provided by various platforms
    and XML parsing libraries.

 .gitignore                    |    1 +
 json-glib/Makefile.am         |    2 +
 json-glib/json-glib.h         |    3 +
 json-glib/json-reader.c       |  779 +++++++++++++++++++++++++++++++++++++++++
 json-glib/json-reader.h       |  142 ++++++++
 json-glib/tests/Makefile.am   |   10 +-
 json-glib/tests/reader-test.c |  101 ++++++
 7 files changed, 1035 insertions(+), 3 deletions(-)

commit c3215ba1d46f7965fb58272da069bec389a174df
Author: Diego Escalante Urrelo <descalante@igalia.com>
Date:   Wed Aug 11 14:42:25 2010 -0500

    json-glib/tests: explicitely link against glib
    
    Tests fail to link otherwise.
    
    Bug #626669

 json-glib/tests/Makefile.am |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

commit 7f85693922d1e2614bcce9219d2c6521580dd360
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 2 18:04:21 2010 +0100

    build: Remove all stray mentions of Shave
    
    We depend on automake 1.11, now.

 .gitignore                  |    3 ---
 autogen.sh                  |   15 +++------------
 build/autotools/Makefile.am |    2 --
 configure.ac                |    1 -
 4 files changed, 3 insertions(+), 18 deletions(-)

commit 26efdb4cc25cffa857e4ce36f0ad7ee6efe00634
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 2 17:49:32 2010 +0100

    Post-release version bump to 0.11.3

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit ff7a8ff73ee214d385c64501c8b5dc682ccad1cf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 2 17:40:29 2010 +0100

    Release 0.11.2 (0.12.0-rc1)

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 8a91b052fba48ae6f4a61115e2fa6839e7a21509
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 2 17:45:35 2010 +0100

    build: Fix up the tests data path
    
    Since we load up a test file from a directory, we should be using a
    path - otherwise this will break out-of-tree builds, e.g. when doing
    a distcheck.

 json-glib/tests/Makefile.am   |    2 +-
 json-glib/tests/parser-test.c |    4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

commit 2e3eaabd12829187f5a9ddacef68319442362729
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 2 17:42:09 2010 +0100

    build: Fix introspection dependencies

 json-glib/Makefile.am |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit def6d5612fbb33f9b02df80294651f5a28a83ccc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 2 17:15:36 2010 +0100

    Update the NEWS file

 NEWS |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

commit 385e6278477dfd35d591f8343deb1de2827ac2ff
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 2 17:15:22 2010 +0100

    docs: Update the dependencies in the README file

 README |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit 5e19ed2523441afd12c45a8b3f19d10fc9a37335
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 2 17:14:52 2010 +0100

    build: Revert the GLib version bump
    
    GIO landed in GLib 2.16, so we don't need the version bump to 2.20.

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit d9b2845572123ed79a6626d90d2d2298c9c3d5a7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 2 17:07:36 2010 +0100

    generator: Add an OutputStream-based method
    
    Currently, only synchronous API.
    
    The output handling is pretty trivial, unlike the input handling in
    JsonParser; this is a really basic convenience API.

 doc/reference/json-glib-sections.txt |    1 +
 json-glib/json-generator.c           |   37 ++++++++++++++++++++++++++++++++++
 json-glib/json-generator.h           |   22 ++++++++++++-------
 3 files changed, 52 insertions(+), 8 deletions(-)

commit c7c288b89175b1f9545d6ddff25609b7bb243041
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 2 17:04:38 2010 +0100

    Fix the include for json-types.h

 json-glib/json-parser.h |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit e6ea3a6bae044ec7874dfde3b50bb337f00bb3be
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 2 16:41:18 2010 +0100

    Exercise the stream API in JsonParser

 json-glib/tests/Makefile.am      |    2 +
 json-glib/tests/parser-test.c    |   78 ++++++++++++++++++++++++++++++++++++++
 json-glib/tests/stream-load.json |    1 +
 3 files changed, 81 insertions(+), 0 deletions(-)

commit 8cac7f2b6987803e36ff6abe012cd3e017b5b960
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 2 16:40:36 2010 +0100

    docs: Add the new JsonParser stream API

 doc/reference/json-glib-sections.txt |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

commit 107e53b2daa27b99fb629dd1e2bf9bfd2729b3dd
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 2 16:39:04 2010 +0100

    parser: Add loading from a GInputStream
    
    JsonParser should be able to use a GInputStream (both synchronously and
    asynchronously) to retrieve the JSON data and parse it.

 json-glib/json-parser.c |  258 +++++++++++++++++++++++++++++++++++++++++++++++
 json-glib/json-parser.h |   49 ++++++----
 2 files changed, 289 insertions(+), 18 deletions(-)

commit b164bb5180749aaff385f5d61866875bfbf9c552
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 2 16:38:01 2010 +0100

    build: Use the GIO prefix for cross-references

 doc/reference/Makefile.am |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

commit 6d317b129169352111ab16a0df9aee8b9aa5284b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 2 16:37:32 2010 +0100

    build: Depend on GIO
    
    Bump up the dependencies to be able to use GIO.

 configure.ac |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

commit 84230dd03b5db34da5ccef0a4926e18c22124952
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 21 23:50:09 2010 +0100

    docs: Fix up the cgit URL

 README |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

commit 67ad0f21ca554edcd6633014b0bce7dd8d216191
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 21 23:49:56 2010 +0100

    Update NEWS for the next stable release

 NEWS |   10 ++++++++++
 1 files changed, 10 insertions(+), 0 deletions(-)

commit 465880e5ccaca086fd1b881bd7175658d627318c
Author: Colin Walters <walters@verbum.org>
Date:   Tue Jul 6 10:49:27 2010 -0400

    Make GIR depend on library
    
    Fixes parallel builds.

 json-glib/Makefile.am |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

commit 66e5f619d55433985460e8c641beb98e85832451
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 16 12:07:41 2010 +0100

    docs: Add JsonBuilder to the API reference
    
    And silence gtk-doc-scanner by removing an undefined argument from
    json_builder_add_null_value().

 doc/reference/json-glib-docs.xml     |    3 ++-
 doc/reference/json-glib-sections.txt |   32 ++++++++++++++++++++++++++++++++
 doc/reference/json-glib.types        |    2 ++
 json-glib/json-builder.c             |    3 ++-
 4 files changed, 38 insertions(+), 2 deletions(-)

commit 08f3073eeb0f7e2e0973abd23ba4ec978ad302d7
Author: Luca Bruno <lethalman88@gmail.com>
Date:   Wed Jun 9 21:31:06 2010 +0200

    builder: Add convenience API for building JSON trees.
    
    https://bugzilla.gnome.org/show_bug.cgi?id=621141
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 .gitignore                     |    1 +
 json-glib/Makefile.am          |    2 +
 json-glib/json-builder.c       |  682 ++++++++++++++++++++++++++++++++++++++++
 json-glib/json-builder.h       |  100 ++++++
 json-glib/json-glib.h          |    1 +
 json-glib/tests/Makefile.am    |    3 +
 json-glib/tests/builder-test.c |  121 +++++++
 7 files changed, 910 insertions(+), 0 deletions(-)

commit 3f8c8f99126dc1a70d847eded13afd4b64395250
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 16 11:54:55 2010 +0100

    Allow NULL as a value for strings, arrays and objects
    
    We should not warn when asking for a string, array or object if the
    contents were 'null'.

 json-glib/json-array.c        |   42 ++++++++++++++++++++++++++++++--------
 json-glib/json-object.c       |   45 ++++++++++++++++++++++++++++++++--------
 json-glib/tests/object-test.c |    4 +++
 3 files changed, 73 insertions(+), 18 deletions(-)

commit 471bcf28589e0929984c4e6a097ae273b017b3f0
Author: Anssi Hannula <anssi@mandriva.org>
Date:   Fri May 28 11:57:18 2010 +0100

    Do not hardcode paths in pkgconfig file
    
    The pkgconfig file correctly sets $prefix to @prefix@, but the other
    paths are hardcoded to ones relative to $prefix.
    
    prefix=@prefix@
    exec_prefix=${prefix}
    libdir=${exec_prefix}/lib
    includedir=${exec_prefix}/include
    
    https://bugzilla.gnome.org/show_bug.cgi?id=613282
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 json-glib.pc.in |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

commit 70b9235b50dd4257e0bf196e07f65807d65f8091
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 28 11:50:01 2010 +0100

    docs: Remove unused field annotation
    
    JsonNode is fully opaque, so there are no fields to annotate.

 json-glib/json-types.h |    1 -
 1 files changed, 0 insertions(+), 1 deletions(-)

commit aaf08f5c1a08c8aaec2436653114996b98ee1f8c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 28 11:35:05 2010 +0100

    build: Clean up the build system
    
    • Use libtool m4 macros, and require libtool >= 2.2.6
    
    • Ditch unused platform checks
    
    • Drop Shave and require automake >= 1.11
    
    • Depend on gtk-doc >= 1.13
    
    • Use gobject-introspection's Makefile rules, and update introspection.m4

 README                             |    4 +-
 build/autotools/Makefile.am        |    3 -
 build/autotools/Makefile.am.silent |    6 ---
 build/autotools/introspection.m4   |    6 +++
 build/autotools/shave-libtool.in   |   69 -------------------------------
 build/autotools/shave.in           |   79 ------------------------------------
 build/autotools/shave.m4           |   77 -----------------------------------
 configure.ac                       |   46 ++++++---------------
 json-glib/Makefile.am              |   47 +++++++--------------
 9 files changed, 37 insertions(+), 300 deletions(-)

commit 6231cf027a8f9c3b11324c1d49a350ba55353123
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 26 08:43:10 2010 +0100

    parser: Do not access GScanner:token
    
    The GScanner:token member is declared as GTokenType instead of being an
    unsigned int. This means that comparing it to any other enumeration is
    going to generate a warning in GCC >= 4.5. Unfortunately, extending the
    GTokenType enumeration is the idiomatic way of handling new tokens.
    
    EPIC. FAIL.

 json-glib/json-parser.c |    9 ++++++---
 1 files changed, 6 insertions(+), 3 deletions(-)

commit fcd07918d3ed2b31b047900da9d2fed23dddf7da
Author: Eiichi Sato <eiichi.for.public@gmail.com>
Date:   Sat Apr 10 01:52:10 2010 +0900

    Support for surrogate pairs in json string.
    
    https://bugzilla.gnome.org/show_bug.cgi?id=615799
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 json-glib/json-scanner.c |   16 +++++++++++++++-
 1 files changed, 15 insertions(+), 1 deletions(-)

commit 37a7931f91f8d79def3f4895bc349ba621a826a1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 14 23:19:58 2010 +0100

    Ignore json-debug.h
    
    The json-debug.h header is private and not installed; hence, it should
    be ignored by gtk-doc.

 doc/reference/Makefile.am |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

commit 28edd58ddfd719d107d89aa364dc208b0126c90f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 14 23:19:28 2010 +0100

    docs: Fix typo
    
    There is no such thing as a 'JsonArrary' type.

 json-glib/json-parser.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit d40045bd855bfcb73c10967d894a8e91f8675409
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 14 23:17:28 2010 +0100

    docs: Fix typo in JsonParserError annotation

 json-glib/json-parser.h |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit b55d139ed0368f368c6c9c8f8adfab4c91f1f508
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Apr 3 14:59:00 2010 +0100

    parser: Do not increment the index variable
    
    When parsing an array with a JsonParser with the debugging notes
    enabled, we get an erroneous increment of the idx variable - which is
    then passed to the JsonParser::array-element signal.
    
    Thanks to: Michael Stapelberg <michael@stapelberg.de>

 json-glib/json-parser.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 24567790d30e314ee519c8f3756b3514c0c3fd31
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Mar 19 15:45:24 2010 +0000

    parser: Add MISSING_COLON error
    
    We identify a missing ':' separator between an object member name and
    its value, so it would be a good thing to actually have an error code
    for that.

 json-glib/json-parser.c       |    3 +--
 json-glib/json-parser.h       |    2 ++
 json-glib/tests/parser-test.c |    3 ++-
 3 files changed, 5 insertions(+), 3 deletions(-)

commit 08cec3b7c9202007a5abbf548f8d2f1b54d4d0b4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Mar 19 15:40:48 2010 +0000

    parser: Refactor the JsonParser logic
    
    The array and object parsing logic in JsonParser has clearly exploded
    beyond control: a simple tightening of the JSON validation almost broke
    the parser in two. It it is time to...
    
            <cue Christopher Lee voice-over>
    
            REFACTOR THE CODE!
    
            </cue Christopher Lee voice-over>
    
    This time, we should be following the JSON state machine and try to do
    more prediction of the next state based on peeking the next token.
    
    The code is fairly cleaner, now; and, most of all, still passes the
    validation test suite - which is, you know... nice.

 json-glib/json-parser.c |  488 +++++++++++++++++++----------------------------
 1 files changed, 200 insertions(+), 288 deletions(-)

commit 9ce82f8052290f3956c3d80c8739c214da314d42
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Mar 19 11:04:00 2010 +0000

    parser: Return specific error codes
    
    The JsonScanner error reporting mechanism, which is basically
    GScanner's, sucks beyond belief. In order to report an error code we
    need to store it inside the JsonParser private structure and then use it
    when creating the GError inside the error handler.
    
    This, frankly, is quite stupid.

 json-glib/json-parser.c       |   49 ++++++++++++++++++++++++++++++++--------
 json-glib/json-parser.h       |    8 ++++++
 json-glib/tests/parser-test.c |   18 +++++++-------
 3 files changed, 56 insertions(+), 19 deletions(-)

commit 9d7c58b4fb5edeb8e9413acc9d509447e13962e5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 18 22:41:14 2010 +0000

    JSON-GLib bug tracking system has been moved
    
    We are now using bugzilla.gnome.org, since we're already hosted on
    git.gnome.org.

 README       |    2 +-
 configure.ac |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit 449656c68a3d6e0d8b96c36414b475e78b9cc272
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 18 17:11:11 2010 +0000

    parser-test: Add a case for double parsing in JsonObject

 json-glib/tests/parser-test.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

commit 54756457de3f01d1a487fc6b90c5bd9b5b50bcf3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 18 17:09:38 2010 +0000

    parser: Re-use json_parse_value()
    
    The main switch inside json_parse_statement() is re-implementing the
    bare value parsing that is also provided by json_parse_value(). We
    should kill it off to avoid redundant code.

 json-glib/json-parser.c |   57 +---------------------------------------------
 1 files changed, 2 insertions(+), 55 deletions(-)

commit 3355987049560b4d31af22476a7c2b20c9d6665b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 18 17:08:44 2010 +0000

    parser: Add debug annotations for json_parse_value()
    
    Print out the values we are parsing, for debug purposes.

 json-glib/json-parser.c |    8 ++++++++
 1 files changed, 8 insertions(+), 0 deletions(-)

commit f622ee8d8ba54ddea6fbb7311a905ffab7842e8d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 18 17:05:57 2010 +0000

    generator: Use %g format for g_ascii_formatd()
    
    I should read the documentation for the functions I use:
    
      Converts a gdouble to a string, using the '.' as decimal point. To
      format the number you pass in a printf()-style format string. Allowed
      conversion specifiers are 'e', 'E', 'f', 'F', 'g' and 'G'.
                    -- from g_ascii_formatd() in GLib's API reference
    
    Epic reading fail.

 json-glib/json-generator.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 90d6e0b8c334b3fd7995c126f07dd61ba0a9e0fb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 18 15:26:19 2010 +0000

    parser-test: Add a complex nested object test
    
    The nested object test should use something that's really complex: an
    object with a nested array and nested object definitions.

 json-glib/tests/parser-test.c |   21 ++++++++++++++++++++-
 1 files changed, 20 insertions(+), 1 deletions(-)

commit f4c57ac4227c4edb8a4cecb784e871fbd5649ad1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 18 15:24:39 2010 +0000

    parser: Clean up array and object parsing
    
    We are doing some of the work twice, especially when dealing with the
    trailing commas detection and the unknown tokens after an array element
    or an object member definition.

 json-glib/json-parser.c |   44 ++++++++++++++++++++++++--------------------
 1 files changed, 24 insertions(+), 20 deletions(-)

commit b3435c6a05ecee58c64dce669ce7e44f829afc98
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 18 15:21:29 2010 +0000

    Add debugging macros
    
    Similarly to what GTK+ and Clutter do, we can use macros that evaluate
    to nothing if JSON_ENABLE_DEBUG is disabled; they evaluate to messages
    when the JSON_DEBUG environment variable is set to a debug domain.

 json-glib/Makefile.am  |    4 +++-
 json-glib/json-debug.c |   37 +++++++++++++++++++++++++++++++++++++
 json-glib/json-debug.h |   45 +++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 85 insertions(+), 1 deletions(-)

commit 88ac0d5111eb528e4c396e4c169ceee4fb046e62
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Mar 5 19:23:49 2010 +0000

    tests: Add another trailing comma invalid test

 json-glib/tests/parser-test.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

commit c22c1151e418af9506547804d4bc9fddb60bc0f1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 1 17:42:41 2010 +0000

    tests: Add negative tests
    
    Verify that invalid JSON will trigger a parser error.

 json-glib/tests/parser-test.c |   53 +++++++++++++++++++++++++++++++++++++++++
 1 files changed, 53 insertions(+), 0 deletions(-)

commit 26668fe238a52a7fd8374f409fc277aaa8efa826
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 1 17:41:14 2010 +0000

    parser: Improve strictness
    
    Apparently, some breakage crept in JsonParser which allowed invalid JSON
    to actually pass. For instance: trailing and missing commas, invalid
    barewords and wrong array and object closing braces.

 json-glib/json-parser.c |  117 +++++++++++++++++++++++++++++++----------------
 1 files changed, 78 insertions(+), 39 deletions(-)

commit 7d156366e9062349fbe58344712a055839449098
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Jan 24 19:09:28 2010 +0000

    build: Configure Automake
    
    Add the following options:
    
      • no-define: we don't need PACKAGE and VERSION defined in config.h
      • -Wno-portability: we require GNU make
      • dist-bzip2: generate a bz2 tarball when distchecking

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit ea666891cb1e6fc9e527ce6c93a306bc97145f16
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Jan 24 18:58:28 2010 +0000

    docs: Fix the GBoxed registration example
    
    The registration function for serialization and deserialization has been
    replaced by two separate functions before releasing 0.10, but I forgot to
    update the example in the documentation.

 json-glib/json-gboxed.c |   11 ++++++-----
 1 files changed, 6 insertions(+), 5 deletions(-)

commit 4c15bf185dcd55ae5daf6b68d2b58d32e9ac9d5c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Jan 10 10:00:32 2010 +0000

    build: Fix CFLAGS and LDFLAGS for the gcov target
    
    A copy and paste thinko duplicated the CFLAGS into the LDFLAGS, so we
    need to fix that. The CFLAGS should also specify the optimization level
    to 0 and turn on debugging notes, in case --enable-debug and
    --enable-maintainer-flags are turned off.

 configure.ac |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit c09c2dc1c54c83fea4ef93486081fe3fab35452c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Jan 10 09:59:14 2010 +0000

    Initialize every member of JsonObject on construction
    
    We create JsonObject structures using g_slice_new(), so we need to
    initialize every member of the structure ourselves.

 json-glib/json-object.c |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit cdffa0eacb52479e04460d8436a08ccecce91edf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jan 2 23:57:31 2010 +0000

    build: Move compiler flags to AM_CFLAGS
    
    The AM_CPPFLAGS variable is for pre-processor flags.

 tests/Makefile.am |    4 +++-
 1 files changed, 3 insertions(+), 1 deletions(-)

commit f20523412e737c2dfae92ba4b9bd86177fd018a0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jan 2 23:56:42 2010 +0000

    build: Enable maintainer flags when compiling tests
    
    The tests should be compiled under the same flags as the rest of the
    library.

 json-glib/tests/Makefile.am |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 7b72cad780fdeb42ac1d847210bd2022376f2875
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jan 2 23:50:40 2010 +0000

    tests: Clean up JsonGenerator test suite
    
    Use typed accessors instead of using GValues all around.

 json-glib/tests/generator-test.c |  145 +++++++-------------------------------
 1 files changed, 25 insertions(+), 120 deletions(-)

commit 3c33b61738d74b732805b497accec830b1a05796
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 1 18:23:16 2010 +0000

    tests: Verify Array.get_elements()
    
    While verifying Array.foreach() we should also verify that the list we
    are iterating on is the same returned by the get_elements() method.

 json-glib/tests/array-test.c |   22 +++++++++++++++++-----
 1 files changed, 17 insertions(+), 5 deletions(-)

commit c8cc10985c3e7aac5ca1c03a7b443951929ed0cb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 1 18:02:03 2010 +0000

    build: Add gcov proxy rule
    
    The gcov rule lives in json-glib/Makefile.am, but it would be nice to
    have a similar rule in the top source directory as well.

 Makefile.am |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

commit 060eddb098dd2b442f986a39aad2e7bf8c777a15
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 29 23:35:00 2009 +0000

    tests: Re-enable the nested object generator unit
    
    Use the JSON object example inside the RFC 4627 to verify that the
    JsonGenerator creates the right output. This is now possible as we
    garantee the order of a JsonObject members.

 json-glib/tests/generator-test.c |  102 +++++++++++++++++++++-----------------
 1 files changed, 56 insertions(+), 46 deletions(-)

commit 37a9c9544447c4a8ac36d80dd58bd38f80b0aa3c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 29 23:02:23 2009 +0000

    Update the ignore file

 .gitignore |    5 +++--
 1 files changed, 3 insertions(+), 2 deletions(-)

commit e32a157f97d96293f6f4061e7d0008d90ff16258
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 29 22:59:13 2009 +0000

    tests: Move Parser and Generator tests
    
    Use the json-glib/tests directory for testing the data structures of
    JSON-GLib: node, object, array, parser and generator.
    
    The tests/ directory should be used for complex test cases, like the
    GObject and GBoxed integration - but the goal is to remove the top-level
    tests/ directory altogether, since the conformance test suite should be
    built along the json-glib/ directory.

 json-glib/tests/Makefile.am      |   26 +-
 json-glib/tests/generator-test.c |  357 +++++++++++++++++++++
 json-glib/tests/parser-test.c    |  632 ++++++++++++++++++++++++++++++++++++++
 tests/Makefile.am                |    8 -
 tests/test-generator.c           |  357 ---------------------
 tests/test-parser.c              |  632 --------------------------------------
 6 files changed, 1006 insertions(+), 1006 deletions(-)

commit 5b4186eb60e953ddbaadcd53b1996d28b06d4a97
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 29 22:53:29 2009 +0000

    Add GCOV coverage test support
    
    Use GCOV, a GCC extension, to perform a coverage test on JSON-GLib when
    we perform a 'make check'.
    
    GCOV support builds JSON-GLib with compiler and linker flags that enable
    coverage reports; then the check-local target will build the gcov file
    for each source file, and the coverage report will be extracted from
    those.

 .gitignore                        |    7 ++++---
 build/autotools/Makefile.am       |    3 ++-
 build/autotools/Makefile.am.gcov  |   35 +++++++++++++++++++++++++++++++++++
 build/autotools/Makefile.am.gtest |    2 ++
 configure.ac                      |   25 +++++++++++++++++++++++--
 json-glib/Makefile.am             |    9 ++++++---
 6 files changed, 72 insertions(+), 9 deletions(-)

commit 56f56ae22d981830b696c5861e158802d31240c1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 29 21:56:42 2009 +0000

    Bump to 0.11

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit dae32677d140a3ba6a15e1198b53ea0b3e1716b0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 29 15:35:21 2009 +0000

    Post-release version bump to 0.10.1

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 5aff66e8fae3e28c9cb6b74696170154eed303a7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 29 15:33:28 2009 +0000

    Release 0.10.0

 configure.ac |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit 7258a776ea90ea4b2dcc6f1e4e440bb09c581a12
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 29 15:31:22 2009 +0000

    build: Enable introspection when distchecking

 Makefile.am |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 80c5178127052e600146ca889500e263da4ebf10
Author: Vincent Untz <vuntz@gnome.org>
Date:   Sun Dec 27 02:09:44 2009 +0100

    Initialize out variables before using them
    
    Here's a small patch for json-glib, to fix some gcc warnings breaking
    the build with -Werror (gcc can't know if the variable will get
    initialized or not). I didn't find a product for json-glib in bugzilla,
    but I guess a mail will work ;-)
    
    Happy holidays :-)
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 json-glib/json-gobject.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit e3a57eae397926ad23e216996eda164ed6c15c63
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Nov 29 12:50:58 2009 +0000

    Post-release bump to 0.9.3

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 4477758b73a0712fdef5e7907f6b6f4e0878428e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Nov 29 12:34:41 2009 +0000

    Release 0.9.2 (0.10.0-rc1)

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 654f99c6b0d771cc6b4c68790ab164b0f691307d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Nov 29 12:34:08 2009 +0000

    Update NEWS

 NEWS |   15 +++++++++++++++
 1 files changed, 15 insertions(+), 0 deletions(-)

commit 307605046cf89ef922d1d1e7c7b95405f3ecfdfb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Nov 29 12:48:25 2009 +0000

    docs: Fix annotation for json_gobject_to_data()

 json-glib/json-gobject.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit e7eb3ca4a9de1c7348dc82f528cf0858f52849dd
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Nov 29 12:37:04 2009 +0000

    docs: Add missing to/from_data methods

 doc/reference/json-glib-sections.txt |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

commit 27bb2c060a7b2ecc4839719d39b2044efe4c3e7a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Nov 29 12:46:27 2009 +0000

    docs: Add release notes to the README

 README |   12 ++++++++++--
 1 files changed, 10 insertions(+), 2 deletions(-)

commit 780d82310c47c3f07bcbaab2cefbea0d6decb899
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Nov 29 12:33:45 2009 +0000

    docs: Update the README

 README |   27 ++++++++++++++++-----------
 1 files changed, 16 insertions(+), 11 deletions(-)

commit d122f9b8c09ad7e82b1a70da5d65ebba2111e6cc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Nov 29 12:33:01 2009 +0000

    build: Clean up the configure summary
    
    Make the output of the summary a little bit nicer.

 configure.ac |   27 ++++++++++++++++++++-------
 1 files changed, 20 insertions(+), 7 deletions(-)

commit e4c4480036a82cc5177fc1f184c18019af0e805e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Nov 29 12:31:54 2009 +0000

    build: Require G-I 0.6.4
    
    We should require at least 0.6.4 for GObject-Introspection, since that
    version allows us to pass the .la file to g-ir-scanner.

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 4445bdb04d5eebc145a1db82aa5b811e8d4ed048
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Nov 28 19:13:27 2009 +0000

    docs: Fix argument name mismatch
    
    gtk-doc complains that the argument name in the header does not match
    the one in the documentation annotation for the GBoxed deserialization
    function registration.

 json-glib/json-gobject.h |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 793e827feaa9be3c4ffbe5c0425ac6bcc0c9e6d1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Nov 28 19:06:36 2009 +0000

    build: Clean up json-glib/Makefile.am rules

 json-glib/Makefile.am |   24 ++++--------------------
 1 files changed, 4 insertions(+), 20 deletions(-)

commit 97584658672fe4709fc7c3b24a44b477112322f7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Nov 28 17:39:37 2009 +0000

    build: Fix out-of-tree enum types file generation

 build/autotools/Makefile.am.enums |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit 3cf919e9c7f3201305a1a63a3c270e422a37efed
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Nov 23 22:20:58 2009 +0000

    boxed: Split (de)serialization registration
    
    A GBoxed type defined as:
    
      struct Boxed {
        int foo;
        gboolean bar;
        int baz;
      };
    
    Can be represented either by a JSON object:
    
      {
        "foo" : 1,
        "bar" : true,
        "baz" : 3
      }
    
    Or by a JSON array:
    
      [ 1, true, 3 ]
    
    The current function for registering a serialization and a
    deserialization pair does not allow registering more than one
    deserialization function - which means that there can only be
    one way to deserialize a GBoxed type into a specific JsonNode
    type.
    
    To allow having more than one JsonNodeType associated to a
    GBoxed type and a deserialization function we need to split out
    the registration of the serialization and deserialization functions
    into two distinct functions.

 doc/reference/json-glib-sections.txt |    3 +-
 json-glib/json-gboxed.c              |  115 ++++++++++++++++++++++------------
 json-glib/json-gobject.c             |    4 +-
 json-glib/json-gobject.h             |   63 +++++++++---------
 tests/test-serialize-boxed.c         |    7 +-
 5 files changed, 114 insertions(+), 78 deletions(-)

commit 61d54cc9e2a3098e876e700a9248428f400a5368
Author: Tristan Van Berkom <tristan.van.berkom@gmail.com>
Date:   Thu Nov 12 12:59:03 2009 +0000

    serializable: Make Serializable in charge of parsing
    
    If a GObject class implements JsonSerializable and has overridden
    the serialize_property() vfunc then the Serializable should be fully in
    charge of serializing a property - that is: JSON-GLib should not try to
    add a fallback in case the serialize_property() implementation returned
    NULL.
    
    This is a change in semantics for JsonSerializable implementations.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1859
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 json-glib/json-gobject.c |    7 +++++--
 1 files changed, 5 insertions(+), 2 deletions(-)

commit 63dc03da507a216c0764bc0e50fc62b2b77dc1b2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Nov 12 12:38:29 2009 +0000

    serializable: Add methods proxying default implementations
    
    If you want to use the default implementation of serialize_property()
    and/or deserialize_property() from an object class implementing
    JsonSerializable you currently have to peek the interface vtable and
    then call the vfunc pointers.
    
    We can expose the default implementation through functions ourselves and
    simplify the required code.

 doc/reference/json-glib-sections.txt |    4 ++
 json-glib/json-gobject.h             |   28 +++++++---
 json-glib/json-serializable.c        |   92 ++++++++++++++++++++++++++++++++++
 3 files changed, 115 insertions(+), 9 deletions(-)

commit 5f484d8c274a2b866f9a3d38eebe2baa1939b7ac
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Nov 12 12:03:13 2009 +0000

    gobject: Add deprecation annotations
    
    This makes it easier to detect when building without
    JSON_DISABLE_DEPRECATED.

 json-glib/json-gobject.h |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit 3c7811bf24d4b957da730949af6795b728db5bad
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Nov 12 12:02:41 2009 +0000

    build: Build without deprecations
    
    Make sure that JSON-GLib is built without using deprecated API.

 json-glib/Makefile.am |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit 923311ee52b77f53c5c529e497ea2a24efaf23ea
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Nov 12 12:01:04 2009 +0000

    tests: Do not use deprecated API
    
    Tests should not be using API marked as deprecated.

 tests/Makefile.am              |    2 +-
 tests/test-serialize-boxed.c   |    4 ++--
 tests/test-serialize-complex.c |    2 +-
 tests/test-serialize-full.c    |    2 +-
 tests/test-serialize-simple.c  |    2 +-
 5 files changed, 6 insertions(+), 6 deletions(-)

commit e3ae84e743e1d1a1a0202e900f443e143cb77f45
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Nov 12 11:57:45 2009 +0000

    tests: Verify Serializable::serialize_property()
    
    Verify that an object with a custom serialize_property() is effectively
    what we expect it to be when it is parsed.

 tests/test-serialize-complex.c |   32 ++++++++++++++++++++++++++++++++
 1 files changed, 32 insertions(+), 0 deletions(-)

commit 7cebdd008a02e6cef0514f40327f94eba2a2088e
Author: Cornelius Hald <hald@icandy.de>
Date:   Thu Nov 12 11:37:54 2009 +0000

    Doubles are converted to strings containing commas
    
    Under some locales (e.g. de_DE) a double is converted to a string
    containing a comma instead of a dot. That breaks the JSON syntax.
    
    Example:
    Double: 0.34 is converted to 0,34 when using locale de_DE
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1826
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 json-glib/json-generator.c |    7 ++++++-
 1 files changed, 6 insertions(+), 1 deletions(-)

commit 30d4efb775cb416212c00e3ececb0f0147739f40
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Nov 12 11:28:17 2009 +0000

    Update Introspection annotations
    
    • Fix the transfer rules for JsonNode, JsonObject and JsonArray
    getters.
    
    • Annotate the methods returning lists

 json-glib/json-array.c  |   18 +++++++++---------
 json-glib/json-node.c   |   15 ++++++++-------
 json-glib/json-object.c |   25 +++++++++++++------------
 json-glib/json-parser.c |    5 +++--
 4 files changed, 33 insertions(+), 30 deletions(-)

commit 47cd2f678a8321faac0e2d00a3538181e7bc1cbf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Nov 12 11:27:36 2009 +0000

    build: Add more flags to the maintainer cflags list

 configure.ac |    4 +++-
 1 files changed, 3 insertions(+), 1 deletions(-)

commit ecc185d1c542f6ff41f84be026dc380f611a5d6e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Nov 12 10:09:17 2009 +0000

    enum-types: Put back a missing static
    
    The GEnumValue array defining the enumeration type values must be
    static, otherwise everything will crash when trying to retrieve the
    enumeration data from the GEnumClass.

 json-glib/json-enum-types.c.in |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 84f5af58c23b174cc9708e81ce8ccbfffa6e68eb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Oct 30 10:46:32 2009 +0000

    object: Return values list in insertion order
    
    Since we return the member names in insertion order, we should also
    return the member values in the same order.
    
    This also allows us to get rid of the (yucky) internal copies of
    g_hash_table_get_keys() and g_hash_table_get_values(), since we use
    the hash table only for storage and lookup purposes.

 json-glib/json-object.c |   55 ++++++-----------------------------------------
 1 files changed, 7 insertions(+), 48 deletions(-)

commit a25a1ded25e5d1f605cffd6da7a5e036151aa70c
Author: Mathias Hasselmann <mathias.hasselmann@gmx.de>
Date:   Thu Oct 29 14:01:04 2009 +0000

    tests: Verify parsing bare values
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1856
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 tests/test-parser.c |   38 +++++++++++++++++++++++++++++++++-----
 1 files changed, 33 insertions(+), 5 deletions(-)

commit 026ea0357fbe95e2acd43555e3b5d00e329c9740
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Oct 29 13:59:44 2009 +0000

    parser: Advance when parsing bare values
    
    A missing get_next_token() prevents getting the contents of
    the tokenizer in order to place them into the JsonNode.

 json-glib/json-parser.c |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit 578111be53065a2bbeda73865bfa4e178f185649
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Oct 28 16:54:34 2009 +0000

    introspection: Fix the GIR generation
    
    The rule for creating the JSON-GLib GIR file should use the
    json-glib.la shared object, to avoid using the installed
    copy of JSON-GLib when compiling the typelib.
    
    The include file for JSON-GLib is json-glib/json-gobject.h as
    well: json-glib/json-object.h does not exist.

 json-glib/Makefile.am |   11 ++++++++---
 1 files changed, 8 insertions(+), 3 deletions(-)

commit 8f8ce87730fc0bf102a707e84c4f6106b215cfab
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Oct 28 16:23:39 2009 +0000

    gobject: Use from/to data naming convention
    
    Be more GLib-like, and use
    
      <namespace>_<type>_from_data()
      <namespace>_<type>_to_data()
    
    Instead of the homebrew "construct" and "serialize", when dealing
    with string buffers.
    
    This means:
    
      • adding json_gobject_from_data() to deprecate
        json_construct_gobject()
      • adding json_gobject_to_data() to deprecate
        json_serialize_gobject()
    
    The json_construct_gobject() function also contains a mistake: it
    uses gsize with the special value of -1 meaning "slurp the whole
    string", but gsize is an unsigned type. The newly added
    json_gobject_from_data() correctly uses gssize instead.

 json-glib/json-gobject.c |   63 +++++++++++++++++++++++++++++++++++++++++++---
 json-glib/json-gobject.h |   10 +++++++
 2 files changed, 69 insertions(+), 4 deletions(-)

commit 00b4d200849e232cd904d23d3593d6f95252b483
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Oct 28 16:05:19 2009 +0000

    gobject: Uniform JSON<->GObject mapping code
    
    Rename json_gobject_new() to json_gobject_deserialize(), and
    json_gobject_dump() to json_gobject_serialize(); this maps the
    JSON GBoxed API.
    
    Also for consistency, change the serialize() return value and
    the deserialize() argument to be JsonNodes of type JSON_NODE_OBJECT.

 doc/reference/json-glib-sections.txt |    4 +-
 json-glib/json-gobject.c             |   82 ++++++++++++++++++++++------------
 json-glib/json-gobject.h             |   10 ++--
 3 files changed, 61 insertions(+), 35 deletions(-)

commit fc0607c740b153acc96e4df12a12b042e08e831b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Oct 28 12:01:21 2009 +0000

    docs: Add long descriptions
    
    The json-boxed and json-serializable sections are missing the
    long description for the API reference.

 json-glib/json-gboxed.c       |   49 +++++++++++++++++++++++++++++++++++++---
 json-glib/json-serializable.c |    5 +++-
 2 files changed, 49 insertions(+), 5 deletions(-)

commit 498827110f3d635e545c7351732551676a06a1bf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Oct 28 10:07:39 2009 +0000

    docs: Add the 0.10 symbols index

 doc/reference/json-glib-docs.xml |    5 +++++
 1 files changed, 5 insertions(+), 0 deletions(-)

commit 0979bbceb654c5e4b5dadf1e6f7e85bb9df87ca5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 20:58:08 2009 +0000

    docs: Split out GObject-related sections
    
    Like commit c176f70e593c9cfb4901cd9f27ce54b8aa7152f2 did for the
    source code, the documentation should be split three-ways:
    
      • GObject-related API
      • JsonSerializable
      • GBoxed-related API

 doc/reference/Makefile.am            |   15 +++++++--------
 doc/reference/json-glib-docs.xml     |    2 ++
 doc/reference/json-glib-sections.txt |   33 +++++++++++++++++++++++++++------
 3 files changed, 36 insertions(+), 14 deletions(-)

commit 2f56ba9021ec4fe1574630404d6b24e4813cf1eb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 20:57:52 2009 +0000

    docs: Documentation fixes for gtk-doc

 json-glib/json-gboxed.c |    8 +++++---
 1 files changed, 5 insertions(+), 3 deletions(-)

commit c176f70e593c9cfb4901cd9f27ce54b8aa7152f2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 20:49:09 2009 +0000

    build: Split out GBoxed and Serializable
    
    The json-gobject.c is getting pretty crowded; we should split out
    the JsonBoxed API and the JsonSerialized implementation into their
    separate source files.

 json-glib/Makefile.am            |    4 +
 json-glib/json-gboxed.c          |  275 ++++++++++++++++++++++++++++
 json-glib/json-gobject-private.h |   39 ++++
 json-glib/json-gobject.c         |  371 +-------------------------------------
 json-glib/json-serializable.c    |  154 ++++++++++++++++
 5 files changed, 476 insertions(+), 367 deletions(-)

commit 373fa3d9b73391b38620fbd9ce9b69f358e5f4c8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 18:10:19 2009 +0000

    gobject: Make GObject<->JsonObject functions public
    
    The functions mapping a GObject to and from a JsonObject should
    be public, as they can be used by parsers.

 json-glib/json-gobject.c |   30 ++++++++++++++++++++++++++++--
 json-glib/json-gobject.h |   16 ++++++++++------
 2 files changed, 38 insertions(+), 8 deletions(-)

commit 85f7a8e8206168d95b3ef9c02aa584f0fae5b37e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 18:03:11 2009 +0000

    gobject: Reuse the list data
    
    Since we ignore all members that don't have a corresponding
    GParamSpec for the class we cannot use:
    
      members = g_list_prepend (members, pspec->name);
    
    Because pspec might also be NULL. We can reuse the GList iterator
    data field, since that points to data internal to the JsonObject
    we are iterating over.

 json-glib/json-gobject.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit ff986ee5b8df45255f4f5ab01be0bbad893bc55e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 17:53:34 2009 +0000

    gobject: Add experimental GBoxed<->JSON transformation
    
    Serializing and deserializing GBoxed types is fairly complicated
    currently. If a GObject implements JsonSerializable it is possible
    for the class to intercept the JsonNode, parse it manually and
    then set the value to the property.
    
    This leaves a hole opened for:
    
      • manual (de)serialization of GBoxed types
      • (de)serialization of GBoxed properties in classes not
        implementing JsonSerializable
    
    In order to serialize and deserialize a GBoxed JSON-GLib should
    provide a mechanism similar to the GValue transformation functions:
    when registering the boxed type the developer should also be able
    to register a serialization and a deserialization functions pair
    matching the tuple:
    
      (GBoxed type, JSON type)
    
    The serialization function would be:
    
      JsonNode *(* JsonBoxedSerializeFunc) (gconstpointer boxed);
    
    And, conversely, the deserialization function would be:
    
      gpointer (* JsonBoxedDeserializeFunc) (JsonNode *node);
    
    Obviously, the whole machinery works only for GBoxed types that
    register the serialization and deserialization functions.

 .gitignore                   |   68 ++++++-----
 json-glib/json-gobject.c     |  264 +++++++++++++++++++++++++++++++++++++++++-
 json-glib/json-gobject.h     |   37 ++++++
 tests/Makefile.am            |    8 +-
 tests/test-serialize-boxed.c |  263 +++++++++++++++++++++++++++++++++++++++++
 5 files changed, 602 insertions(+), 38 deletions(-)

commit 7f6a73a0964b66b15e8b5a9858b9bc76b010f67b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 17:43:38 2009 +0000

    node: Add a private NodeType-to-string converter
    
    Useful for debugging and logging purposes.

 json-glib/json-node.c          |   23 ++++++++++++++++++++++-
 json-glib/json-types-private.h |    2 ++
 2 files changed, 24 insertions(+), 1 deletions(-)

commit 3f8990f7a4c362590f19e427aae2f68f27303fe6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 17:42:14 2009 +0000

    Remove a stray ';' that broke deserializing GStrv
    
    The stray semicolon was preventing the GPtrArray from being
    updated.

 json-glib/json-gobject.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 8e550ac4dbb5500a40c7adad88868ede40397db7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 17:41:38 2009 +0000

    Fix compiler warnings (remove unused variables)

 json-glib/json-gobject.c |    3 +--
 1 files changed, 1 insertions(+), 2 deletions(-)

commit 3b994a52d9c34f67e4ac52aa4bb0c380789fbd60
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 17:40:55 2009 +0000

    build: Export MAINTAINER_CFLAGS
    
    Apparently, the MAINTAINER_CFLAGS were ignored.

 configure.ac |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit 0810711a7fbb915ba9397a66e77babb30765d090
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 17:40:23 2009 +0000

    build: Use AM_PROG_CC_C_O
    
    Use the Automake macro to enable per-target compiler flags.

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit d664f886372afbe1d54e633240e7b7e06ebc45c8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 17:40:03 2009 +0000

    Fix compiler warnings (remove unused variables)

 tests/test-generator.c      |    4 ++--
 tests/test-serialize-full.c |    1 -
 2 files changed, 2 insertions(+), 3 deletions(-)

commit 83dea3b3dd2281dca206e0873b5fed0a2a3d50de
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 14:01:24 2009 +0000

    gobject: Support constructor properties
    
    The GObject deserialization code currently skips all the constructor
    and constructor-only properties. In order to implement them we can
    add a preliminary pass on the JSON object members and build a
    GParameter array.
    
    As we don't have a GObject instance we cannot really use the
    Serializable interface to provide custom parsing for complex data
    structures, thus we fall back to the default deserialization code
    path.

 json-glib/json-gobject.c    |   98 ++++++++++++++++++++++++++++++++++++++-----
 tests/test-serialize-full.c |   11 +++--
 2 files changed, 93 insertions(+), 16 deletions(-)

commit 2616938c7c042fced9be197205a535a8b420534e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 11:57:38 2009 +0000

    build: Clean up the build environment
    
    Some of the rules can be moved into their own files to be included
    when needed, like:
    
      • silent rules (QUIET_*)
      • glib-mkenums rules
      • glib-genmarshal rules
    
    Also, the test suite rules should be moved from the top-level of
    the project into the build/autotools directory and then included
    only where it makes sense.
    
    This requires changing most of the build system to use the new
    files layout.

 .gitignore                          |    4 +-
 Makefile.am                         |    5 +-
 Makefile.decl                       |   61 ------------------------
 build/Makefile.am                   |   12 ++++-
 build/autotools/Makefile.am         |   21 +++++++--
 build/autotools/Makefile.am.enums   |   43 +++++++++++++++++
 build/autotools/Makefile.am.gtest   |   61 ++++++++++++++++++++++++
 build/autotools/Makefile.am.marshal |   45 ++++++++++++++++++
 build/autotools/Makefile.am.silent  |   17 +++++++
 doc/Makefile.am                     |   12 ++++-
 doc/reference/Makefile.am           |    5 +-
 json-glib/Makefile.am               |   88 +++++++++++------------------------
 json-glib/tests/Makefile.am         |   12 +++--
 tests/Makefile.am                   |   15 ++----
 14 files changed, 252 insertions(+), 149 deletions(-)

commit 5406301b0e3bf74c0d7ae47a618c416d5c6dc29d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 11:30:55 2009 +0000

    gobject: Serialize properties holding a GObject
    
    Like we deserialize them, we can serialize GObject properties
    defined using GParamSpecObject.

 json-glib/json-gobject.c |   14 ++++++++++++++
 1 files changed, 14 insertions(+), 0 deletions(-)

commit 3a2176ebf96b33716d1b50068ca44b1d3cd9b0c8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 11:29:32 2009 +0000

    tests: Use properties to change values
    
    The values inside _init() should match the default values of the
    properties as specified by the GParamSpec. If we want to verify
    a non-default value we should specify the value when instantiating
    the object.

 tests/test-serialize-simple.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit 1ff48cdc5d773925bda1ddf8bc904a9ea6a5e643
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 11:18:51 2009 +0000

    gobject: Split GObject serialization code
    
    Like for the deserialization of a GObject into a JsonObject we
    should split out the serialization of a GObject into a JsonObject
    part of json_serialize_gobject() into its own private function.

 json-glib/json-gobject.c |  113 +++++++++++++++++++++++++---------------------
 1 files changed, 61 insertions(+), 52 deletions(-)

commit 27afed8dc89bf9562c3536f0a053d250e70eea4d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 10:30:27 2009 +0000

    gobject: Recurse in GParamSpecObject properties
    
    Use the newly added json_gobject_new() internal function to
    recurse into properties defined using GParamSpecObject.
    
    The same rules used by json_construct_gobject() apply to the
    properties storing a GObject - including JsonSerializable
    support.
    
    The test case for serialization and deserialization of a
    GObject has been updated to include a property holding a
    GObject.

 json-glib/json-gobject.c    |   14 +++++++++-
 tests/test-serialize-full.c |   58 +++++++++++++++++++++++++++++++++++++-----
 2 files changed, 64 insertions(+), 8 deletions(-)

commit 317447b52455c56b0123168ab127ce026d7d0c22
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Oct 27 10:20:42 2009 +0000

    gobject: Split JSON to GObject code
    
    If we want to be able to parse a GParamSpecObject property
    we need to use the same code as json_construct_gobject(), minus
    the parsing.

 json-glib/json-gobject.c |  152 +++++++++++++++++++++++++---------------------
 1 files changed, 83 insertions(+), 69 deletions(-)

commit cba7db96581343e3cbd8e5eb067026efb8cac24e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Oct 26 22:36:01 2009 +0000

    object: Guarantee insertion order
    
    When iterating over the members of a JsonObject, or when retrieving
    the list of members, the insertion order should be preserved by the
    JsonObject. This is simply implemented by keeping a mirror list of
    the member names.
    
    Apparently, though JSON does not guarantee any ordering, it is somewhat
    expected by JSON (and ECMAScript) users.

 json-glib/json-object.c        |   67 +++++++++++++++++++++-------------------
 json-glib/json-types-private.h |    3 ++
 tests/test-generator.c         |    3 +-
 3 files changed, 40 insertions(+), 33 deletions(-)

commit d5bebce0286aef5c4b4110c16c22a8ef3dc38405
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Mon Sep 28 18:15:48 2009 +0100

    [node] Add HOLDS macros for quick type checking
    
    JsonNode should mimick GValue's API and have macros for easy type checking

 doc/reference/json-glib-sections.txt |    7 ++++-
 json-glib/json-types.h               |   51 ++++++++++++++++++++++++++++++++++
 json-glib/tests/node-test.c          |    2 +-
 3 files changed, 58 insertions(+), 2 deletions(-)

commit 17fc731ed54b754285bac76c7ac23eac6b96bf24
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Mon Sep 28 14:02:14 2009 +0100

    [tests] Add a test case for Object members with empty strings
    
    Both the Object API and the Parser should not choke on members with
    empty strings as their value. The Object should just have a member
    associated with a JSON_NODE_VALUE node type and an empty string as
    the contents.

 json-glib/tests/object-test.c |   13 +++++++++++++
 tests/test-parser.c           |    1 +
 2 files changed, 14 insertions(+), 0 deletions(-)

commit 5181bf24bf3cde743de590ab3ffa0471df9e4799
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Tue Sep 22 15:42:34 2009 +0100

    Post-branch bump to 0.9.1

 configure.ac |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit 3f83767109979c660469b3b5862fbd04469a8011
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Tue Sep 22 15:39:46 2009 +0100

    [release] 0.8.0

 NEWS         |    2 ++
 configure.ac |    8 ++++++--
 2 files changed, 8 insertions(+), 2 deletions(-)

commit bd604338b25884edbd86cf531505259948484323
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Tue Sep 22 15:34:18 2009 +0100

    [parser] Return the right expected token
    
    When parsing a value embedded in a Json Object or Array we need to
    return the right expected token so that the generated syntax error
    will be correct.

 json-glib/json-parser.c |   16 ++++++++++++++--
 1 files changed, 14 insertions(+), 2 deletions(-)

commit f99cf3d3d038eff786f85409f3d04736e2068e74
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Tue Sep 22 15:34:07 2009 +0100

    [parser] Whitespace clean up

 json-glib/json-parser.c |   11 ++++++-----
 1 files changed, 6 insertions(+), 5 deletions(-)

commit 6c20aae2b49a6d64db5e7d1ff3a82950ea9dc58a
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Mon Sep 7 22:30:11 2009 +0100

    [build] Prefer automake-1.11 silent rules to shave
    
    If we have automake-1.11 installed then we should enable the
    AM_SILENT_RULES machinery instead of Shave - even though Shave's
    output is a lot cleaner.

 autogen.sh            |    2 +-
 configure.ac          |   20 ++++++++++++++++----
 json-glib/Makefile.am |    6 +++++-
 3 files changed, 22 insertions(+), 6 deletions(-)

commit 7b4bb80930f12a366d5e5a5eea5b398972cd4891
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Sun Sep 6 17:31:41 2009 +0100

    [node] Add JsonNode.set_parent()
    
    Add the setter for JsonNode:parent, to be used in JsonParser instead
    of directly accessing the JsonNode structure.

 doc/reference/json-glib-sections.txt |    1 +
 json-glib/json-node.c                |   18 ++++++++++++++++++
 json-glib/json-parser.c              |   14 +++++++-------
 json-glib/json-types.h               |    2 ++
 tests/test-parser.c                  |   10 ++++++++++
 5 files changed, 38 insertions(+), 7 deletions(-)

commit c1b76a73e0b2c6e0c7afced10bd6079a0f5b0f5d
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Sun Sep 6 17:15:46 2009 +0100

    [parser] Clean up value parsing
    
    The code that parses a value within an object and an array should
    be moved to its own function to avoid duplication.

 json-glib/json-parser.c |  199 +++++++++++++++++++----------------------------
 tests/test-parser.c     |    9 +-
 2 files changed, 86 insertions(+), 122 deletions(-)

commit d3f005c27d9a8a46259205f2f8077fb01a6a3609
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Sun Sep 6 14:44:18 2009 +0100

    [docs] Use proper xi:include for indexes
    
    Instead of relying on gtk-doc we can do the proper inclusion of the
    API indexes using XInclude, complete with fallbacks.
    
    Also, we should include the additional pages that gtk-doc generates
    for us, like the annotations glossary and the object tree.

 doc/reference/json-glib-docs.xml |   17 +++++++++++++++++
 1 files changed, 17 insertions(+), 0 deletions(-)

commit 7442a3011a860f12cbd40b6687b699b0b648d6b7
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Wed Sep 2 16:41:51 2009 +0100

    [docs] Small documentation fixes
    
    Clean up some notes, and add introspection annotations where needed.

 json-glib/json-generator.c |   11 ++++++-----
 json-glib/json-gobject.c   |   24 ++++++++++++------------
 json-glib/json-parser.c    |    3 ++-
 3 files changed, 20 insertions(+), 18 deletions(-)

commit d7d1e702b1d67fa1ec830a46650a02367ce1dd29
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Sun Aug 16 05:52:46 2009 +0100

    [docs] Remove note about normalization of member names
    
    The normalization of member names inside JsonObject was removed by
    commit 8a7e0f381dc7e49745680df92ebb428f18bf4832.

 json-glib/json-object.c |    6 +-----
 1 files changed, 1 insertions(+), 5 deletions(-)

commit 9362ccc891c914dbcf1be6bd067b0b37ae688057
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Thu Aug 13 15:10:27 2009 +0100

    [docs] Generate new symbols index for 0.6 and 0.8

 doc/reference/json-glib-docs.xml |    8 ++++++++
 1 files changed, 8 insertions(+), 0 deletions(-)

commit 087bfe83412dca8de1b2dd67c74f490e44ecb96a
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Thu Aug 13 15:10:07 2009 +0100

    [docs] Remove the version number from the title

 doc/reference/json-glib-docs.xml |   11 ++++++++---
 1 files changed, 8 insertions(+), 3 deletions(-)

commit c7d31d55b50b23c6c1067cb3541f73dddc12127a
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Thu Aug 13 15:08:56 2009 +0100

    [docs] Let gtk-doc build the correct index
    
    Use the --name-space command line argument for gtk-doc to detect the
    right namespace of JSON-GLib, and create a useful index.

 doc/reference/Makefile.am |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit be07ba7b983b34231ad2f0fd7fe60ae47b14ce7e
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Thu Aug 13 14:51:42 2009 +0100

    [docs] Rename main file to json-glib-docs.xml

 doc/reference/Makefile.am         |   36 +++++----
 doc/reference/json-glib-docs.sgml |  163 -------------------------------------
 doc/reference/json-glib-docs.xml  |  163 +++++++++++++++++++++++++++++++++++++
 3 files changed, 182 insertions(+), 180 deletions(-)

commit 9661ff342b439b5b398f7bf9ba931d6139d5143d
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Wed Aug 12 16:09:33 2009 +0100

    Post-release version bump to 0.7.7

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit d5922b42604c09ba7ebcb0adc1566d0a33a99808
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Wed Aug 12 16:06:40 2009 +0100

    [release] 0.7.6 (brown paper bag)

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 9a647104ca77d4c4272845fed4bfae028098afd3
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Wed Aug 12 15:56:00 2009 +0100

    Actually use the int64 support in the Scanner
    
    We switched everything to 64 bit integers but then I forgot to
    enable the support for actually making the tokenizer store the
    parsed integers into a 64 bit value.
    
    Bad Emmanuele, no cookie for you.

 json-glib/json-parser.c  |   12 ++++++------
 json-glib/json-scanner.c |    1 +
 2 files changed, 7 insertions(+), 6 deletions(-)

commit f3e0618ee1d8aa90d0ba22e9abe5c7d6b849e0ea
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Wed Aug 12 14:08:35 2009 +0100

    Post-release version bump to 0.7.5

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit c1c691fc6b58a990ee9bb17504189064051d5a12
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Wed Aug 12 13:56:08 2009 +0100

    [release] 0.7.4

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 12bc49ea08c50da9a7ed53c475fe873421432ebe
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Wed Aug 12 14:01:49 2009 +0100

    Update the NEWS file

 NEWS |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

commit 75b888c26eebf7784c5af045a8c6af353e56b2e9
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Wed Aug 12 13:59:52 2009 +0100

    [build] Use our libtool for the typelib
    
    When compiling the GIR into a .typelib file we can use our own
    libtool script; shave will proxy it to the right place.

 json-glib/Makefile.am |   20 +++++++++++---------
 1 files changed, 11 insertions(+), 9 deletions(-)

commit d84c0f367b06e094ff693d60a724b9f141c33ca9
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Wed Aug 12 13:48:17 2009 +0100

    Disallow single header file inclusion
    
    The correct header file for JSON-GLib is, and has always been,
    json-glib.h. Anything else was not supported, as we've been
    moving around stuff for a while, now.
    
    This commit enforces the single include file, using the same
    policy enacted by other libraries, like: GLib, GTK+ and Clutter.

 json-glib/json-enum-types.h.in |    4 ++++
 json-glib/json-generator.h     |    4 ++++
 json-glib/json-glib.h          |    6 ++++++
 json-glib/json-parser.h        |    4 ++++
 json-glib/json-types.h         |    4 ++++
 json-glib/json-version.h.in    |    4 ++++
 6 files changed, 26 insertions(+), 0 deletions(-)

commit 3adba015e1c1f9edc7b7b2c4364d65f813216225
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Wed Aug 12 13:46:46 2009 +0100

    [introspection] Use json-gobject.h
    
    The json-gobject.h header file includes json-glib.h and all the
    GObject-related serialization and deserialization API; we assume
    that if you want introspection you should be using this header
    and not the plain json-glib.h.

 json-glib/Makefile.am |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit a9386e20bf8e16e17a89dda24781c63bf495aa97
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Wed Aug 12 13:46:05 2009 +0100

    [tests] Include json-glib.h
    
    Do not include json-types.h, use the correct global include.

 json-glib/tests/array-test.c  |    2 +-
 json-glib/tests/node-test.c   |    2 +-
 json-glib/tests/object-test.c |    2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

commit 8a7e0f381dc7e49745680df92ebb428f18bf4832
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Wed Aug 12 12:29:34 2009 +0100

    Do not sanitize the object member's name
    
    JsonObject sanitizes the name of the member to replace all
    characters defined by G_STR_DELIMITERS with '_'. This is
    absolutely brain damaged, since a member name can be any
    valid JSON string.
    
    Obviously, if a member name maps to a GObject property is
    entirely up to the GObject code to decide whether to sanitize
    the member name or not.

 json-glib/json-object.c |   35 ++++++-----------------------------
 1 files changed, 6 insertions(+), 29 deletions(-)

commit ad638149c2cc1a17c0d2ad1482d932c8940c64e0
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Wed Aug 12 12:22:44 2009 +0100

    Update NEWS

 NEWS |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

commit d87b18675ac02f42be23bf4070134690b8b9934b
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Wed Aug 12 12:13:11 2009 +0100

    Auto-promote integer types to G_TYPE_INT64
    
    The JSON RFC does not specify the size of the integer type, thus
    implicitly falling back to machine-size.
    
    This would all be fine and dandy if some demented Web Developer (and
    I use the term "developer" *very much* loosely) did not decide to
    use integers to store unique identifiers for objects; obviously, you
    can't have more than 2^32-1 status messages in a database with
    millions of users who update their status multiple times per day.
    Right, Twitter?
    
    Anyway, some languages do a type auto-promotion from Integer to
    Long, thus pushing the limit of allowed positive values -- until the
    next integer overflow, that is. C, and GLib, do not do that
    transparently for us so we need to:
    
      - always use gint64 when parsing a JSON data stream using
        JsonScanner
      - move all the Node, Object and Array APIs to gint64
      - auto-promote G_TYPE_INT to G_TYPE_INT64 when setting
        a GValue manually
      - auto-promote and auto-demote G_TYPE_INT properties when
        (de)serializing GObjects.
    
    The GLib types used internally by JSON-GLib are, thus:
    
      integer       -> G_TYPE_INT64
      boolean       -> G_TYPE_BOOLEAN
      float         -> G_TYPE_DOUBLE
      string        -> G_TYPE_STRING

 json-glib/json-array.c        |    4 +-
 json-glib/json-generator.c    |    4 +-
 json-glib/json-gobject.c      |   58 ++++++++++++++++++++++++++++++---------
 json-glib/json-node.c         |   61 +++++++++++++++++++++++++++++++++--------
 json-glib/json-object.c       |    4 +-
 json-glib/json-types.h        |   12 ++++----
 json-glib/tests/array-test.c  |    2 +-
 json-glib/tests/node-test.c   |   14 +++++-----
 json-glib/tests/object-test.c |    2 +-
 tests/test-generator.c        |    4 +-
 tests/test-parser.c           |    4 +-
 tests/test-serialize-full.c   |    9 +-----
 12 files changed, 121 insertions(+), 57 deletions(-)

commit 7411cadc0fdd9ffc2bd7004c9980913ac857a495
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Sun Jun 28 23:52:34 2009 +0100

    Indentation fixes

 tests/test-parser.c |   98 +++++++++++++++++++++++++-------------------------
 1 files changed, 49 insertions(+), 49 deletions(-)

commit 112a8ec8dfd9c46304008b62e8ab256ed7714644
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Sun Jun 28 23:49:51 2009 +0100

    [parser] Advance the tokenizer to avoid an infinite loop
    
    The tokenizer is not advanced when we peek a base value and return.
    This causes an endless loop which terminates only if the OOM killer
    in the kernel gets the right process.
    
    Thanks to Thomas Weidner for catching and reporting the issue.

 json-glib/json-parser.c |   16 +++++++++++-----
 1 files changed, 11 insertions(+), 5 deletions(-)

commit 4ecdd6bedb7961f3a33971aa1f2338115a60f7f3
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Sun Jun 28 23:48:36 2009 +0100

    [tests] Verify parsing base values
    
    A JSON document containing just a base value (null, true/false, an
    integer, a floating point value or a string) is still a valid JSON
    document, and JsonParser must create the correct JsonNode.

 tests/test-parser.c |   59 +++++++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 59 insertions(+), 0 deletions(-)

commit 9a3b7a020716e23f1330915f1768a7c00bffbeb5
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Thu Jun 25 10:37:43 2009 +0100

    [docs] Fix typo in JsonObject::set_object_member()
    
    The passed value is a pointer to a JsonObject, not to a JsonArray.

 json-glib/json-object.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 68d872f15022217c0ff1cf516aec917d600fd762
Author: Rodrigo Moya <rodrigo@gnome-db.org>
Date:   Wed Jun 24 14:07:18 2009 +0200

    Use JSON_NODE_OBJECT, not JSON_NODE_ARRAY when creating the node in json_object_set_object_member
    
    Reviewed by Emmanuele Bassi

 json-glib/json-object.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 6e706fb2b7a371f25c169ed25d4b617f2dc05b63
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Jun 21 10:58:24 2009 +0100

    [generator] Pre-compute the escape table
    
    Instead of allocating the escape table to be used with g_strescape()
    for each string we can have it unrolled already in code.
    
    Thanks to: Christian Persch <chpe@gnome.org>
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1648

 json-glib/json-generator.c |   43 +++++++++++++++++++++++++++++++++----------
 1 files changed, 33 insertions(+), 10 deletions(-)

commit a9416b7e2823f1fffe639d90bb352a337815a70e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 18 11:23:56 2009 +0100

    Post-release bump to 0.7.3

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 1d13a409bb911141653a75d44e90feac9bfc2862
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 18 11:20:35 2009 +0100

    [release] 0.7.2

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit ff97e679522c52be6b5dfe0f851416cdeac7f921
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 18 11:14:37 2009 +0100

    [release] Update NEWS

 NEWS |   19 +++++++++++++++++++
 1 files changed, 19 insertions(+), 0 deletions(-)

commit 182ca9cd9a3fabaa2533d841154856c61c570d08
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 18 11:14:13 2009 +0100

    [build] Fixes for passing distcheck

 Makefile.am                 |   17 ++++++++++++-----
 build/Makefile.am           |    2 ++
 build/autotools/Makefile.am |    4 +++-
 doc/reference/Makefile.am   |   20 +++++++++++---------
 json-glib/Makefile.am       |   27 ++++++++++++++-------------
 5 files changed, 42 insertions(+), 28 deletions(-)

commit 019d8d4c1c56250cd507283c0fc478a38364e92a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 18 10:05:57 2009 +0100

    [build] Let gtk-doc ignore json-types-private.h
    
    The type definitions in json-types-private.h are not meant to be
    documented or scanned.

 doc/reference/Makefile.am |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit 41649f049637864cfce21f6615c7d8bcaf3f03b8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 18 10:03:23 2009 +0100

    [docs] Update the README file

 README |   30 ++++++++++++++++++++----------
 1 files changed, 20 insertions(+), 10 deletions(-)

commit 97fc00b1a5e3878074488ee93d9b52570983da1f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 18 10:03:05 2009 +0100

    [build] Use AS_CASE m4 macro, instead of AS_IF

 configure.ac |   30 ++++++++++++++++--------------
 1 files changed, 16 insertions(+), 14 deletions(-)

commit 610cd260ac50c09809d6273c328ecea5a21f51bb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 18 10:02:39 2009 +0100

    [build] Require automake 1.10

 configure.ac |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

commit bddc717b8b6f2f1501c30f78159c20394665d335
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 9 11:48:02 2009 +0100

    [build] Add introspection generation
    
    Build the Introspection data when compiling JSON-GLib; this way, the
    API should be available to other languages automatically.

 .gitignore                       |    3 +
 build/autotools/Makefile.am      |    7 +++-
 build/autotools/introspection.m4 |   88 ++++++++++++++++++++++++++++++++++++++
 configure.ac                     |   13 +++--
 json-glib/Makefile.am            |   30 +++++++++++++
 5 files changed, 135 insertions(+), 6 deletions(-)

commit 3ddeb7a8779a4c51453289aa15af130af480eea6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 9 11:24:54 2009 +0100

    [build] Add AS_COMPILER_FLAGS
    
    Use the m4 AS_COMPILER_FLAGS macro to check for the maintainer
    compiler flags supported by the C compiler. This should allow the
    build to handle gracefully different versions of GCC.

 .gitignore                          |    1 +
 Makefile.am                         |    2 +
 build/autotools/Makefile.am         |    2 +-
 build/autotools/as-compiler-flag.m4 |   62 +++++++++++++++++++++++++++++++++++
 configure.ac                        |    5 ++-
 5 files changed, 70 insertions(+), 2 deletions(-)

commit 9f817eae9fe0d09441fa78b11ef148a3f4affe22
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 9 11:21:19 2009 +0100

    [tests] Do not namespace with json-

 tests/test-generator.c |   10 +++++-----
 tests/test-parser.c    |   18 +++++++++---------
 2 files changed, 14 insertions(+), 14 deletions(-)

commit bde3da83b1a144fc0eff1db5a2aa790462bb685e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 9 11:15:53 2009 +0100

    [git ignore] Add m4 files under build/

 .gitignore |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

commit c12786444e0175464295fb9a98c600060bffa0ed
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 9 11:13:30 2009 +0100

    Fix license and copyright notices
    
    THere is no such thing as the "Lesser General Public License
    version 2": the LGPL v2 is the "Library GPL", and has been
    superceded by v2.1 with the new "Lesser GPL" name.
    
    Also, the copyright is now Intel Corp.

 json-glib/json-array.c      |    8 ++++++--
 json-glib/json-generator.c  |    8 ++++++--
 json-glib/json-generator.h  |    8 ++++++--
 json-glib/json-glib.h       |   23 +++++++++++++++++++++++
 json-glib/json-gobject.h    |    8 ++++++--
 json-glib/json-node.c       |    8 ++++++--
 json-glib/json-object.c     |    9 ++++++---
 json-glib/json-parser.c     |    8 ++++++--
 json-glib/json-parser.h     |    8 ++++++--
 json-glib/json-version.h.in |    8 ++++++--
 10 files changed, 77 insertions(+), 19 deletions(-)

commit 069cdc8c4ea9024b1583f074815e16e9ddf7db7f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 9 11:05:23 2009 +0100

    [node] Make JsonNode completely private
    
    The JsonNode structure has always been meant to be completely
    opaque; we indirectly exposed the :type member, but only for
    access through the JSON_NODE_TYPE() macro.
    
    Since that macro has become a proxy for the json_node_get_node_type()
    function we can safely move everything into a private, uninstalled
    header file and let JsonNode be completely opaque to the developer.

 json-glib/Makefile.am          |    1 +
 json-glib/json-array.c         |    9 +-----
 json-glib/json-generator.c     |    2 +
 json-glib/json-gobject.c       |    2 +
 json-glib/json-node.c          |    2 +-
 json-glib/json-object.c        |    9 +-----
 json-glib/json-parser.c        |    2 +
 json-glib/json-types-private.h |   61 ++++++++++++++++++++++++++++++++++++++++
 json-glib/json-types.h         |   38 +++++++++---------------
 json-glib/tests/node-test.c    |    8 ++--
 10 files changed, 89 insertions(+), 45 deletions(-)

commit 930fdf4c4dff1f5310a946c2a9f5b6860f7c8ba8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun May 17 19:44:41 2009 +0100

    Add JsonArray iteration function
    
    Similarly to commit 3057a172 for JsonObject, the newly added
    json_array_foreach_element() iterates over a JSON array data
    type.

 doc/reference/json-glib-sections.txt |    2 +
 json-glib/json-array.c               |   35 ++++++++++++++++++++++++
 json-glib/json-types.h               |   21 +++++++++++++++
 json-glib/tests/array-test.c         |   48 ++++++++++++++++++++++++++++++++++
 4 files changed, 106 insertions(+), 0 deletions(-)

commit 3057a1722e27a13b39ddec4754fb6abda1aea199
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat May 16 20:09:07 2009 +0100

    Add JsonObject iteration function
    
    The json_object_foreach_member() function iterates over a JsonObject
    data type.

 doc/reference/json-glib-sections.txt |    2 +
 json-glib/json-object.c              |   55 ++++++++++++++++++++++++++++++++
 json-glib/json-types.h               |   25 +++++++++++++-
 json-glib/tests/object-test.c        |   57 ++++++++++++++++++++++++++++++++++
 4 files changed, 137 insertions(+), 2 deletions(-)

commit 5778210462b8b7a1a5d98466508276f712ea8c47
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat May 16 13:53:58 2009 +0100

    Update the enum types templates
    
    The autogenerated enumeration types registration code should
    be using the same pattern used by the G_DEFINE_TYPE() macros,
    with GOnce to enable atomic (and thread-safe) type registration.

 json-glib/json-enum-types.c.in |   18 +++++++++++++-----
 1 files changed, 13 insertions(+), 5 deletions(-)

commit 43d4bd151cd6979ecc6fdad5fab3e7988117c7be
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Apr 19 00:36:08 2009 +0100

    [doap] Add a category element

 json-glib.doap |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit 58999bddac74c176fbd8544fa2cd30e2f067d863
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 17 15:45:42 2009 +0100

    [node] Add is_null() method
    
    The json_node_is_null() function is just a quick check for
    nodes set to null.

 doc/reference/json-glib-sections.txt |    1 +
 json-glib/json-node.c                |   20 ++++++++++++++++++++
 json-glib/json-types.h               |    1 +
 3 files changed, 22 insertions(+), 0 deletions(-)

commit ba46d8e07a8e2dd50a3b1fff8b8c3303e3686480
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 17 15:38:40 2009 +0100

    [node] Make JSON_NODE_TYPE call a function
    
    Second pass at adding type safety to the JsonNode type checks.
    
    The JSON_NODE_TYPE macro now calls the json_node_get_node_type()
    function which hides the JsonNode.type structure field and gives
    us a little bit more of future compatibility.

 json-glib/json-types.h |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit d1e7d1ecd05687624f7149dad75a5fac9a645e72
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 17 15:36:09 2009 +0100

    [node] Add function version of JSON_NODE_TYPE macro
    
    First pass at adding some type safety to the JsonNode type checks,
    and at removing every mention of the JsonNode interna fields.

 doc/reference/json-glib-sections.txt |    1 +
 json-glib/json-node.c                |   18 ++++++++++++++++++
 json-glib/json-types.h               |    5 +++--
 3 files changed, 22 insertions(+), 2 deletions(-)

commit f2f43d17254317d35ea0cc8206592ecbcb856b68
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 17 15:22:04 2009 +0100

    Intern the remaining type names
    
    JsonArray and JsonSerializable type names should be interned like
    the rest of the types.

 json-glib/json-array.c   |    2 +-
 json-glib/json-gobject.c |    3 ++-
 2 files changed, 3 insertions(+), 2 deletions(-)

commit bfcc50d5b199e72ed3e5a7556ac2294442e3ac55
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 17 15:19:42 2009 +0100

    [docs] Remove newline from the version template
    
    The newline at the end of the version.xml.in file is retained
    when using its contents as the version entity in the API reference
    docbook.

 doc/reference/version.xml.in |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit cbc92b72b2d7870a916f24055f8c2aa2371aa4ea
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 17 15:02:44 2009 +0100

    [tests] Use the typed accessors in test-generator
    
    Other than using the GValue-based methods we should also be using
    the typed JsonNode accessors and the newly added JsonObject and
    JsonArray typed accessors.

 tests/test-generator.c |   65 ++++++++---------------------------------------
 1 files changed, 11 insertions(+), 54 deletions(-)

commit e437ce609e333c5b8ede21174dfba032c1bbfb00
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 17 14:49:25 2009 +0100

    Add convenience accessors to JsonArray
    
    Like commit 5bb6ea91 did for JsonObject, we should add typed
    convenience accessors to JsonArray in order to cut down the
    amount of nodes needed when parsing and generating JSON data
    streams.
    
    As for JsonObject, the amount of types is small enough to avoid
    the combinatorial API explosion.

 doc/reference/json-glib-sections.txt |   22 ++-
 json-glib/json-array.c               |  386 ++++++++++++++++++++++++++++++++++
 json-glib/json-types.h               |   57 ++++--
 3 files changed, 447 insertions(+), 18 deletions(-)

commit 4819ca625d1b73270797f913495a3835297950c2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 17 11:44:01 2009 +0100

    Update after the json_object_add_member() deprecation
    
    Since json_object_add_member() has been deprecated and it's using
    a gcc compiler attribute to loudly complain while compiling the
    library, we should restore the sanity and use json_object_set_member()
    instead.

 json-glib/json-gobject.c       |    2 +-
 json-glib/json-parser.c        |    6 +++---
 json-glib/tests/node-test.c    |    2 +-
 json-glib/tests/object-test.c  |    4 ++--
 tests/test-generator.c         |   26 +++++++++++++-------------
 tests/test-serialize-complex.c |    4 ++--
 tests/test-serialize-full.c    |    4 ++--
 7 files changed, 24 insertions(+), 24 deletions(-)

commit 5bb6ea91accb1d35f0ea4dae8f2b8f71bdbd134d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 17 11:35:57 2009 +0100

    Deprecate add_member() and add set_member() and friends
    
    The add_member() method of JsonObject has wee bit weird semantics: if
    the member to be added already exists it prints a scary warning and
    returns - and yet it calls g_hash_table_replace() internally as if it
    overwrites the member.
    
    So, instead of changing semantics midway we can:
    
      - add a json_object_set_member() which adds a new member and
        overwrites existing members
    
      - deprecate json_object_add_member()
    
    While we're at it, we can add convenience wrappers for set_member()
    and get_member() that don't require us toying with nodes; luckily,
    since the amount of valid types we can add to a JsonObject is limited,
    this does not lead to a combinatorial API explosion.

 doc/reference/json-glib-sections.txt |   17 ++
 json-glib/json-object.c              |  489 ++++++++++++++++++++++++++++++++--
 json-glib/json-types.h               |   83 +++++--
 3 files changed, 555 insertions(+), 34 deletions(-)

commit 2a768cb5e553afc4a9ac0d9bf1dc36a183821983
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Apr 16 19:57:11 2009 +0100

    [doap] Add GNOME extensions
    
    The GNOME project provides an extension to DOAP that allows the
    description of the maintainer/author of a project to specify the
    GNOME userid.

 json-glib.doap |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

commit 17822292acb4d1c9b4f414ea0e4b858809d3b858
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Apr 16 18:18:45 2009 +0100

    [doap] Add 0.6 releases
    
    Describe the releases of the 0.6 cycle.

 json-glib.doap |   18 ++++++++++++++++++
 1 files changed, 18 insertions(+), 0 deletions(-)

commit 470f3a4299153362deea260c806d9b87870af3de
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Apr 16 18:03:31 2009 +0100

    Add JSON-GLib DOAP description
    
    Use DOAP (Description Of A Project) to describe JSON-GLib. The
    GNOME Cgit instance will pick up the DOAP file and update itself.

 json-glib.doap |   30 ++++++++++++++++++++++++++++++
 1 files changed, 30 insertions(+), 0 deletions(-)

commit 764a3f79fe0d8d13e24bd921a16a46f4603bcbf1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Apr 16 11:28:24 2009 +0100

    Add MAINTAINERS file
    
    Every GNOME project needs a MAINTAINERS file.

 MAINTAINERS |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

commit f9956b4eadcfc9bbd5c0bc4b861ff782779e8a9a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Apr 14 00:09:35 2009 +0100

    [node] Do not overwrite when copying
    
    Bug 1353 - Copying JSON_NODE_VALUE nodes unreliable at best
    
    When copying a JsonNode to another we do an implicit memcpy using:
    
      *copy = *src
    
    Which works well enough with pointers, but makes a mess out of the
    value-based nodes.
    
    We should just copy the type of the original JsonNode and leave the
    rest to the switch() block.
    
    In order to catch potential regressions, we also need a more
    thorough test unit for the JsonNode copy operation.

 json-glib/json-node.c       |    2 +-
 json-glib/tests/node-test.c |   45 +++++++++++++++++++++++++++++++++++++++++-
 2 files changed, 44 insertions(+), 3 deletions(-)

commit e2c65a75d68aafa26f2084928e732961e48beb99
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Apr 13 23:46:52 2009 +0100

    [build] Improve the build system
    
    Clean up the configure.ac and Makefile.am files to use something
    that is not entirely made of FAIL.
    
    Also, use Shave to sanitize the libtool and compiler incantations
    and restore sanity to the build system.

 .gitignore                       |    5 ++
 autogen.sh                       |    9 ++++
 build/Makefile.am                |    1 +
 build/autotools/Makefile.am      |    3 +
 build/autotools/shave-libtool.in |   69 +++++++++++++++++++++++++++++
 build/autotools/shave.in         |   79 +++++++++++++++++++++++++++++++++
 build/autotools/shave.m4         |   77 ++++++++++++++++++++++++++++++++
 configure.ac                     |   90 +++++++++++++++++++++----------------
 json-glib/Makefile.am            |   89 +++++++++++++++++++------------------
 9 files changed, 340 insertions(+), 82 deletions(-)

commit 8080df63b4b4eae3b59d1214fc67f48149f49773
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Apr 13 22:25:42 2009 +0100

    [parser] Prevent leaks on error codepaths
    
    Static analysis of the code showed some potential leaks inside
    error paths for JsonParser.
    
    Thanks to: Gordon Williams <gordon.williams@collabora.co.uk>

 json-glib/json-parser.c |   38 +++++++++++++++++++++++++++++++++-----
 1 files changed, 33 insertions(+), 5 deletions(-)

commit ca329a7d5c1185cdf15fb85891693eca30295de1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Apr 13 22:30:05 2009 +0100

    [docs] Show an example of assignment
    
    Since I decided to rant about assignments in JSON definitions,
    I also need to show what an assignment looks like.

 json-glib/json-parser.c |   17 ++++++++++++-----
 1 files changed, 12 insertions(+), 5 deletions(-)

commit b28d5894060aac1239e23665f42be3946b5450e7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Apr 13 22:29:36 2009 +0100

    Whitespace fixes
    
    Add more spaces and remove the ` from the error message.

 json-glib/json-parser.c |   18 ++++++++++++------
 1 files changed, 12 insertions(+), 6 deletions(-)

commit a19a51df9e95e36edf949e68581731bd31959081
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Apr 13 22:08:21 2009 +0100

    [tests] Use 'static' when registering enum types
    
    Bug 1393 - Regression tests fails on OpenBSD
    
    When registering a GEnumClass we need to set the GEnumValue array
    as static const because g_enum_register_static() does not contain
    the word "static" just for fun.
    
    Reported by: Jasper <jasper@humppa.nl>

 tests/test-serialize-full.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit e583a9ec95f3d157091ec1e1a2ac8c493f0e23b2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Apr 13 22:04:10 2009 +0100

    [build] Use gnome-autogen script
    
    When setting up the build environment we should use the tools that
    GNOME provides instead of calling autoreconf.

 autogen.sh |   21 ++++++++-------------
 1 files changed, 8 insertions(+), 13 deletions(-)

commit 1d92c73bc05423872581d513f355783d4864edd5
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Fri Nov 28 17:24:15 2008 +0000

    Abstract the loading code into its own function
    
    The load_from_file() method must set the is_filename/filename fields
    of the JsonParserPrivate structure, so that the error handler can
    use them to print out the file, as well as the line in case of
    error.
    
    Since load_from_data() needs to unset those two fields, to avoid
    printing invalid/stale information, we need to have a generic "load"
    function that can be invoked by both load_from_data() and
    load_from_file(), and leave the JsonParser object set up to those
    two methods.
    
    Hence, a private json_parser_load() has been added, moving most of
    the code out of json_parser_load_from_data(). This function does not
    perform type checks and requires that the length of the memory buffer
    containing the JSON data stream is already a positive integer.

 json-glib/json-parser.c |  175 +++++++++++++++++++++++++++-------------------
 1 files changed, 103 insertions(+), 72 deletions(-)

commit 6e7958785096806b3ffa60a4937642d713a051f2
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Fri Nov 28 17:19:17 2008 +0000

    Display the filename inside error messages
    
    Instead of just relaying the line number both when parsing files
    and memory buffers, JsonParser should also print out the file name
    in case it is available.
    
    The error message format should be make-like and emacs-friendly,
    that is:
    
      filename:line_number: error message
    
    so that editors and development environments can parse the errors
    easily.
    
    This commit adds the filename string, and a boolean flag for checking
    whether the filename is set, inside the JsonParser private data
    structure. The boolean flag is checked inside the JsonScanner error
    handler when populating the GError or when printing the warning
    directly on stderr.

 json-glib/json-parser.c |   28 ++++++++++++++++++++++++++--
 1 files changed, 26 insertions(+), 2 deletions(-)

commit a5bea353dead0bd69f9664df86050fc829a2dcd5
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Mon Nov 3 16:01:03 2008 +0000

    Bump to 0.7.1 after stable branch

 configure.ac |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

commit cf4c7360c69c0fe7587ec2456cd10839e1d0c1d6
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Mon Nov 3 15:51:21 2008 +0000

    Correctly terminate a string array
    
    When converting from a JsonArray of strings to a GStrv we need to
    add a NULL at the end of the GPtrArray we use to perform the
    conversion.
    
    This two lines patch fixes the issue.
    
    See bug 1203.
    
    Patch by: Kouhei Sutou <kou@cozmixng.org>
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 json-glib/json-gobject.c |    4 +++-
 1 files changed, 3 insertions(+), 1 deletions(-)

commit 9b94bc7f99063f45a2725861369f36b53ec3d440
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Jun 13 11:56:46 2008 +0100

    Sync up with the current stable release numbers

 configure.ac |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit 4dd392342003147d55eee98db50e11d344b287d4
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Jun 13 11:27:50 2008 +0100

    Fix a variable shadowing

 json-glib/json-generator.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

commit a02a42ef47e61456747e511556097b903f07d68a
Merge: fdbad1c bc5c722
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Jun 13 11:23:08 2008 +0100

    Merge the fix for bug #965
    
    Merge branch 'bug-965'

commit bc5c7225535ef447743ac59ecdba8c237549a108
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Jun 13 11:22:35 2008 +0100

    Conditionally compile the test suite
    
    If the --disable-glibtest command line switch has been given to the
    configure script, the test suite should be disabled and not built.
    
    This commit disables recursion in the tests/ and json-glib/tests
    when the ENABLE_GLIB_TEST Makefile conditional has been set.

 Makefile.am           |    6 +++++-
 configure.ac          |    3 +++
 json-glib/Makefile.am |    2 ++
 3 files changed, 10 insertions(+), 1 deletions(-)

commit fdbad1cfd6ad6da9fab631f945ab8d2e85228fdf
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Jun 13 11:06:15 2008 +0100

    Escape to special characters in JsonGenerator
    
    When using json-glib to write a blog system, some deserialized objects
    were not been interpreted by javascript because there were line breaks
    in generated strings.
    
    Patch from Lincoln de Sousa.
    
    Bug #958 - JsonGenerator does not escape special characters
    
    Signed-off-by: Emmanuele Bassi <ebassi@openedhand.com>

 json-glib/json-generator.c |   17 ++++++++++++++++-
 1 files changed, 16 insertions(+), 1 deletions(-)

commit 81c02ef3db6901655f8a7117e5e2675d37096daf
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sun May 18 11:56:04 2008 +0100

    Remove the include for json-scanner.h
    
    The json-scanner.h header file is not shipped with JSON-GLib anymore.

 json-glib/json-glib.h |    1 -
 1 files changed, 0 insertions(+), 1 deletions(-)

commit 9713843a4294b3e35a29125bf2bf1867a6443f27
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue May 6 11:48:25 2008 +0100

    Remove debian packaging

 debian/changelog                |    5 ---
 debian/compat                   |    1 -
 debian/control                  |   61 ---------------------------------------
 debian/copyright                |   27 -----------------
 debian/libjson-glib-dev.install |    3 --
 debian/libjson-glib-doc.install |    1 -
 debian/libjson-glib-doc.links   |    1 -
 debian/libjson-glib0.install    |    1 -
 debian/rules                    |   12 -------
 9 files changed, 0 insertions(+), 112 deletions(-)

commit d67000ab6c5ae6710f48f0517c98600af7cdaa0e
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon May 5 23:17:58 2008 +0100

    Update changelog for the debian packages

 debian/changelog |    3 +--
 1 files changed, 1 insertions(+), 2 deletions(-)

commit 0830873edc5203655f04868184cedb428b6d2d54
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon May 5 23:16:38 2008 +0100

    Update git ignore file

 .gitignore |   72 ++++++++++++++++++-----------------------------------------
 1 files changed, 22 insertions(+), 50 deletions(-)

commit eb1cd29f78ff52e3ec3b063716fb86b5f2c5ae4a
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon May 5 23:13:17 2008 +0100

    Remove Vala bindings
    
    Vala bindings are maintained out of tree, directly inside the Vala
    repository and official packages, so there's no point in duplicating
    the effort here.

 Makefile.am                |    6 +--
 configure.ac               |   15 -----
 contrib/Makefile.am        |    6 --
 contrib/json-glib-1.0.deps |    1 -
 contrib/json-glib-1.0.vapi |  139 --------------------------------------------
 contrib/json-object.vala   |   46 ---------------
 contrib/json-test.vala     |  122 --------------------------------------
 7 files changed, 1 insertions(+), 334 deletions(-)

commit 094acd1663210e803a8dab496f6de8066ef11f44
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon May 5 12:44:29 2008 +0100

    Bump to 0.6.1

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit a725bac9a287883f2d4f32130c7faedb121f754b
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon May 5 12:39:01 2008 +0100

    Bump to 0.6.0

 configure.ac |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit cd598180b12a212525427a8cddf11bc0ed4f1836
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon May 5 12:38:50 2008 +0100

    Update NEWS for 0.6.0

 NEWS |    5 +++++
 1 files changed, 5 insertions(+), 0 deletions(-)

commit 26479ec3c342889a2ee822bdf73f2e5fb6e170d7
Merge: 8b5b5f6 7ff9134
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon May 5 12:35:16 2008 +0100

    Add debian packaging to the master branch
    
    Merge branch 'debian-packaging'

commit 8b5b5f6a4fdfb219897d75893889014f44ba4bb0
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon May 5 12:34:35 2008 +0100

    Add json-scanner.h to the EXTRA_DIST content
    
    Fix a distcheck error because json-scanner.h is not packaged inside
    the tarball.

 json-glib/Makefile.am |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit 705a73eb3dfa2323ec86c1d299b567a15acde7a6
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon May 5 12:24:22 2008 +0100

    Style fixes for the configure output

 configure.ac |   10 +++++-----
 1 files changed, 5 insertions(+), 5 deletions(-)

commit e017d392a281594e350a8d74c142cbe014753d7e
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon May 5 12:24:00 2008 +0100

    Fix typo in the libtool flags arguments
    
    The correct syntax for passing the versioning information to
    libtool is '-version-info', not '-versio-info'.

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 2051be2f7185733bbc62d10ec096538fec924638
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon May 5 12:22:59 2008 +0100

    Add the Bugzilla URL to AC_INIT
    
    JSON-GLib has a bugzilla product on bugzilla.openedhand.com. By adding
    the URL to the configure.ac template, the configure script will print
    it when invoked with the --help command line switch.

 configure.ac |    7 ++++++-
 1 files changed, 6 insertions(+), 1 deletions(-)

commit 4cb8a9078172c5f56ac5d56417b8656a7053df4a
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon May 5 12:21:40 2008 +0100

    Update autogen.sh
    
    Make autogen.sh test for the location of the current directory, and
    warn if the checkout is not complete.
    
    If gtk-doc is not installed (for instance, on an embedded minimal
    set up), do not fail and just provide a stub gtk-doc.make.

 autogen.sh |   28 +++++++++++++++++++++++++---
 1 files changed, 25 insertions(+), 3 deletions(-)

commit 1571fcddd6f2a245f4bb6ad64f82d24fc9c4cec0
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu May 1 23:00:28 2008 +0100

    Test the deserialization of arrays of strings
    
    Arrays of strings are handled automatically by the GObject
    deserialization and serialization code. We need to test that
    they are correctly parsed and assigned to the instance.

 tests/test-serialize-full.c |   29 +++++++++++++++++++++++++++--
 1 files changed, 27 insertions(+), 2 deletions(-)

commit 4c11d0969a44bb70acf6463ef6305999ff443be2
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu May 1 22:58:55 2008 +0100

    Use an array to hold the strings in a vector
    
    Instead of building a GString by concatenating every string inside
    an array to deserialize the array into a string vector property,
    use a GPtrArray. This is far more efficient (no reallocations are
    necessary, as we know the size of the array) and safe (the separator
    used to build the string buffer and then split it might exist in
    one of the original strings).

 json-glib/json-gobject.c |   15 +++++----------
 1 files changed, 5 insertions(+), 10 deletions(-)

commit 7ff91344d21b0c26d3a3a2834dbf09286cb1f904
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu May 1 16:08:15 2008 +0100

    Remove control re-generation rule
    
    We don't have a template control, so there's not need to clean it
    up and regenerate it.
    
    This is why copying existing debian/rules templates is not a good
    idea unless you read the Debian packaging rules.

 debian/rules |    3 ---
 1 files changed, 0 insertions(+), 3 deletions(-)

commit e75321e64f17d69beac0c2e131572fe081680b08
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu May 1 15:58:31 2008 +0100

    Add debian packaging files
    
    The debian packaging files are obviously needed to generate Debian
    packages for JSON-GLib.

 debian/changelog                |    6 ++++
 debian/compat                   |    1 +
 debian/control                  |   61 +++++++++++++++++++++++++++++++++++++++
 debian/copyright                |   27 +++++++++++++++++
 debian/libjson-glib-dev.install |    3 ++
 debian/libjson-glib-doc.install |    1 +
 debian/libjson-glib-doc.links   |    1 +
 debian/libjson-glib0.install    |    1 +
 debian/rules                    |   15 +++++++++
 9 files changed, 116 insertions(+), 0 deletions(-)

commit 30f9d47ecf43a17610cd9c0074ff832bfa37593c
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Apr 24 15:47:11 2008 +0100

    Test the equality of the serialize string length

 tests/test-serialize-simple.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

commit 07c2b916dadb4b40fbaabf49f0e80941993cc2cf
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Apr 24 15:02:33 2008 +0100

    Export only the public symbols
    
    All the symbols starting with an underscore or with something that
    is not "json" are to considered private, and thus are not global
    to the shared object.

 json-glib/Makefile.am |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

commit 179899e5da801fda0981a1d446ba420efd4021c1
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Apr 24 14:55:51 2008 +0100

    Update git ignore file

 .gitignore |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

commit b0daf7e3a2529dd9950d77a96a10233d68778f32
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Apr 24 14:54:05 2008 +0100

    Include the newly added json-enum-types.h header
    
    When including json-glib/json-glib.h we get everything json-glib
    expose as a public symbol.

 json-glib/json-glib.h |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit c7a7f429565195fe7aba56a254abf3637cf6fa8a
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Apr 24 14:52:54 2008 +0100

    Ignore the enumeration types header and the stamp file
    
    We don't need gtk-doc to look at those files; the enumeration
    types are already documented, and the get_type() function and
    macro are implied.

 doc/reference/Makefile.am |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

commit 053bf43c813799c5f59e9241217fe31c560b5885
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Apr 24 14:52:07 2008 +0100

    Install the autogenerated enum types header
    
    The enumeration GTypes are public and meant to be used by
    language bindings and other users of the library.

 json-glib/Makefile.am |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit 5977d95866cd9763e97a47d6c9909e6a2fbf0ed1
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Apr 24 14:50:34 2008 +0100

    Autogenerate the GTypes for the enumerations

 json-glib/Makefile.am |   70 +++++++++++++++++++++++++++++++++----------------
 1 files changed, 47 insertions(+), 23 deletions(-)

commit 356413e8840a614914b84f40b1d8476ba036ded4
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Apr 24 14:49:45 2008 +0100

    Add enumeration types templates for glib-mkenums
    
    The templates for glib-mkenums keep the Makefile.am sane and
    editable by mere mortals.

 json-glib/json-enum-types.c.in |   31 +++++++++++++++++++++++++++++++
 json-glib/json-enum-types.h.in |   26 ++++++++++++++++++++++++++
 2 files changed, 57 insertions(+), 0 deletions(-)

commit 7d57ffc03783defbfeb26e21a14e3df32555c29d
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Apr 21 10:57:05 2008 +0100

    Update git ignore file

 .gitignore |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit 7d259e03b9a556d155ade87417ab26830c3e7684
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sun Apr 20 22:43:32 2008 +0100

    Validate the variable name in the assignment test
    
    Make sure that not only we report that there is an assignment
    and that the returned variable is not NULL, but also that the
    returned variable name is correct.

 tests/test-parser.c |   16 ++++++++++------
 1 files changed, 10 insertions(+), 6 deletions(-)

commit 6899bca0dcf72dac0cad9dcf1a7cd10159d471e5
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 23:22:29 2008 +0100

    Add more cases for the nested array parsing unit
    
    Try more combinations of elements inside an array with a nested
    object.

 tests/test-parser.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

commit 81addb645ac5fad28619bb660624902abe981377
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 23:18:54 2008 +0100

    Add verbose messages
    
    The unicode escaping unit should have the same verbosity as the
    other units.

 tests/test-parser.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

commit 22a0db88c14895f98db76bca3cb078fbd3a2b07d
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 23:09:32 2008 +0100

    Whitespace fixes in the licensing notice

 json-glib/json-scanner.h |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 676592cef006de16d966a1ca0469ccd0556f0e4b
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 23:09:20 2008 +0100

    Documentation fixes in JsonNode

 json-glib/json-node.c |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

commit bf2249a1855b6bebe0b3528b4d5321a1ebe4b9e7
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 23:08:20 2008 +0100

    Do not copy node data if it's not there
    
    If the source JsonNode does not contain data yet, do not try
    and copy it.

 json-glib/json-node.c |   17 +++++++++++++----
 1 files changed, 13 insertions(+), 4 deletions(-)

commit c191b2f8a8159457db3333390be10d6c7c0d4336
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 23:05:03 2008 +0100

    Ignore json-scanner.h and its types
    
    When generating the documentation, ignore the JsonScanner header
    as it will not be installed.
    
    Also, we moved JsonTokenType from json-parser.h to json-scanner.h,
    where it belongs, so we can remove it from the (private) subsection
    of the json-parser section.

 doc/reference/Makefile.am            |    7 ++++++-
 doc/reference/json-glib-sections.txt |    1 -
 2 files changed, 6 insertions(+), 2 deletions(-)

commit ffbd9063556a061ba3e7e4223b924ae4766adfbd
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 23:01:26 2008 +0100

    Do not install the JsonScanner header
    
    The JsonScanner tokenizer is an internal copy of GScanner: it should
    not be used outside JSON-GLib - JsonParser is the public API for
    parsing JSON.

 json-glib/Makefile.am |    5 +++--
 1 files changed, 3 insertions(+), 2 deletions(-)

commit df2a310a6ed0a3b32415f53076ff4c053b3fd925
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 22:59:28 2008 +0100

    Fix the external gtk-doc references
    
    Gtk-doc can try and resolve the external symbols using the data
    currently installed in other locations.
    
    Since we are using GLib and GObject it would be nice to backlink
    to them inside our API reference.

 doc/reference/Makefile.am |    7 ++++---
 1 files changed, 4 insertions(+), 3 deletions(-)

commit 6a3d8266efe505b29555db21658c241eba20fe2d
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 22:57:05 2008 +0100

    Add GLIB_PREFIX variable
    
    The gtk-doc-fixref script needs to know the location of the
    libraries documentation; in order to get it, we can ask the
    pkg-config file of the library for its prefix.

 configure.ac |    5 +++++
 1 files changed, 5 insertions(+), 0 deletions(-)

commit 4e5ec69cce8ab27f965985ba69ea11224ae39ffd
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 22:28:21 2008 +0100

    Update the description and dependencies

 README |    7 ++++++-
 1 files changed, 6 insertions(+), 1 deletions(-)

commit f65a5d5e30a1242a899149b732d1139891876014
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 18:05:45 2008 +0100

    Bump to 0.5.1

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit ab0da7c61bde715e99dd16027b198c7760b30922
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 18:01:57 2008 +0100

    Update for 0.5.0 release

 NEWS |   14 ++++++++++++++
 1 files changed, 14 insertions(+), 0 deletions(-)

commit 203927c71231cf6cec6d88161211702b7105df2d
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 17:20:50 2008 +0100

    Fix ignore rule

 .gitignore |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 76921ac27534aa0a25b39790ce4d99cf6e19a20c
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 17:19:30 2008 +0100

    Verify the correct handling of Unicode escaping
    
    Check that JsonParser correctly handles Unicode characters escaped
    using the \uXXXX notation, as per RFC.

 tests/test-parser.c |   67 +++++++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 67 insertions(+), 0 deletions(-)

commit 379a2fe972c6e7436be9f345fe018bf4fe575354
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 17:16:28 2008 +0100

    Add support for parsing \uXXXX into Unicode
    
    JsonScanner was forked from GScanner in order to support the
    JSON-specific Unicode escaping.
    
    JsonScanner now intercepts the \u escape character and, if it
    is followed by a hexadecimal value, it will retrieve the
    Unicode character encoded in the following 4 values and insert
    the character itself in the buffer.
    
    This allows full compatibility with JSON.

 json-glib/json-scanner.c |   56 +++++++++++++++++++++++++++++++++++++++++-----
 1 files changed, 50 insertions(+), 6 deletions(-)

commit 9429ecaa88cdb6705189b6970481911f11339ff6
Merge: d313aa1 445a3f7
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 19 15:33:15 2008 +0100

    Merge master branch back for testing JsonScanner
    
    Merge branch 'master' into json-scanner

commit 445a3f71d046abed4ff99e0ab4cd9cc8e047f5be
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Apr 12 13:21:21 2008 +0100

    Allow null nodes to return a value without a warning
    
    Value nodes might contain 'null' as a valid value, so the fast accessors
    should not barf out when encountering a JSON_NODE_NULL instead of the
    expected JSON_NODE_VALUE.

 json-glib/json-node.c |   21 +++++++++++++++------
 1 files changed, 15 insertions(+), 6 deletions(-)

commit 4e826d9f209a8f68023bae54c91b2bbbb202a54a
Merge: 98b6e5e 2a579b5
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Apr 3 16:32:53 2008 +0100

    Merge branch 'test-framework'

commit 2a579b51f38df1c009201703279a3e6cb4f57eea
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Apr 3 16:31:48 2008 +0100

    Wrap the test report information section inside an info element

 Makefile.decl |    6 ++++--
 1 files changed, 4 insertions(+), 2 deletions(-)

commit 8e2e539d02b84e0fe452174f3dfab06f35a4e6a1
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sun Mar 9 20:52:29 2008 +0000

    Add value testing to the JsonNode unit
    
    Test the GValue API for storing fundamental types into a JsonNode.

 json-glib/tests/node-test.c |   29 +++++++++++++++++++++++++++++
 1 files changed, 29 insertions(+), 0 deletions(-)

commit 646b90e79d3424a332064a6a1e9fc62d1ce99386
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Wed Mar 5 17:43:06 2008 +0000

    Add package and version information to the test-report XML

 Makefile.decl |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

commit b8943381b0df44d9e6e21ae8321df2376c8458a8
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Wed Mar 5 16:03:24 2008 +0000

    Add JsonObject test unit
    
    Use a similar test unit as the JsonArray one, testing creation, empty
    objects, addition and removal of members.

 .gitignore                    |    2 +
 json-glib/tests/Makefile.am   |   17 +++++++----
 json-glib/tests/object-test.c |   62 +++++++++++++++++++++++++++++++++++++++++
 3 files changed, 75 insertions(+), 6 deletions(-)

commit 7eab612d9b200aef197fa1dffa4f89b936c76b1f
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Wed Mar 5 15:46:41 2008 +0000

    Add element removal unit to the Array test
    
    Remove the json_array_remove_element() call from the add-element test unit
    and set up a separate test case for the element removal. This keeps the
    test cases clean.

 json-glib/tests/array-test.c |   12 ++++++++++++
 1 files changed, 12 insertions(+), 0 deletions(-)

commit 6aa1ddb891594e0f567bc3ebeb3bf5d3ab8e7e0c
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Mar 4 13:07:08 2008 +0000

    Clean the test-report XML output, if found

 Makefile.am |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 6eee8282d327614380854d572b2680f40b2faaf5
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Mar 4 12:37:52 2008 +0000

    Update gitignore file

 .gitignore |   18 ++++++++----------
 1 files changed, 8 insertions(+), 10 deletions(-)

commit d5cb48681c68c3d53d8ec331ef37fb60820a9421
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Mar 4 12:30:48 2008 +0000

    Build test-serialize-full
    
    Complete the porting of the old test suite into the new, GTest based one.
    
    The new test suite is automatically run with make test; make test-report
    will generate an XML report of the test.
    
    The API coverage for the data types is part of the json-glib/tests
    directory and will be expanded later.

 tests/Makefile.am           |    8 ++++-
 tests/test-serialize-full.c |   56 ++++++++++++++++++++++++++----------------
 2 files changed, 41 insertions(+), 23 deletions(-)

commit 1f6307ea2d7dc6ebe279d08b9f95f3074fbdd462
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Mar 4 12:18:19 2008 +0000

    Rename test-08 into test-serialize-full
    
    The test-08 case was the last numbered test unit.

 tests/test-08.c             |  337 -------------------------------------------
 tests/test-serialize-full.c |  337 +++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 337 insertions(+), 337 deletions(-)

commit cdb194e8d64343e8bcb00e046c5fbeefd677b02a
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Mar 4 12:17:29 2008 +0000

    Rename test-07 into test-serialize-complex
    
    The new test-serialize-complex adds a test unit for the JsonSerializable
    interface; the TestObject implements the serialization interface to
    create a JSON data type from a boxed GType.

 tests/Makefile.am              |    4 +
 tests/test-07.c                |  252 --------------------------------------
 tests/test-serialize-complex.c |  261 ++++++++++++++++++++++++++++++++++++++++
 3 files changed, 265 insertions(+), 252 deletions(-)

commit 4c766a029d8f6a2d06b749527020fd93fc4a4f99
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Mar 4 12:12:37 2008 +0000

    Fix compilation of test-serialize-simple and add it to the test suite
    
    The new test-serialize-simple tests the GObject integration for
    serializing simple GObjects into JSON.

 tests/Makefile.am             |    4 ++++
 tests/test-serialize-simple.c |    5 +++--
 2 files changed, 7 insertions(+), 2 deletions(-)

commit 325185c5955f8942ddf8d55a9e3b5d6a8c2723d1
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Mar 4 12:10:23 2008 +0000

    Rename test-06 to test-serialize-simple

 tests/test-06.c               |  162 -----------------------------------------
 tests/test-serialize-simple.c |  162 +++++++++++++++++++++++++++++++++++++++++
 2 files changed, 162 insertions(+), 162 deletions(-)

commit cbea4698c1b7284d8004fff659a7354fb3af29ee
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Mar 4 12:09:44 2008 +0000

    Move test-06 to GTest API
    
    First pass into replacing the last three numbered tests into named
    tests.

 tests/test-06.c |   28 ++++++++++++++++++----------
 1 files changed, 18 insertions(+), 10 deletions(-)

commit 5cc1d3d6061830de403ccbc10c2414f29cd1cf82
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Mar 4 10:52:51 2008 +0000

    Coalesce JsonGenerator test cases into a single test unit
    
    Like we did for JsonParser, JsonGenerator has now a test unit checking the
    output of a DOM built and dumped into a buffer.
    
    For the arrays is quite easy to verify that the output is correct;
    unfortunately, JsonObject does not guarantee any ordering on the members,
    with it being an associative array. Hence, for the object test case we
    just compare the length of the output.

 tests/Makefile.am      |    4 +
 tests/test-04.c        |  238 ----------------------------
 tests/test-05.c        |  227 ---------------------------
 tests/test-generator.c |  399 ++++++++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 403 insertions(+), 465 deletions(-)

commit e100c69a4fca046cbeb6db3fc8ba49160796d87c
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Mar 4 10:44:56 2008 +0000

    Append to EXTRA_DIST, since it was defined elsewhere

 contrib/Makefile.am |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 98b6e5e2f151c4ee800754675bf01e585fee850b
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Mar 4 07:05:01 2008 +0000

    Update the README

 README |   36 ++++++++++++++++++++++++++++++++++++
 1 files changed, 36 insertions(+), 0 deletions(-)

commit 1a078c783a5a03b3367ce59eb25248dd6e23b5c6
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Mar 4 07:05:01 2008 +0000

    Update the README

 README |   36 ++++++++++++++++++++++++++++++++++++
 1 files changed, 36 insertions(+), 0 deletions(-)

commit 44891ea1040ceae95a994b646174696de7779ea1
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Mar 4 06:44:59 2008 +0000

    Update gitignore file

 .gitignore |   11 +++++------
 1 files changed, 5 insertions(+), 6 deletions(-)

commit 3ea189acf52ea39653c6505c136f1f45a660a24c
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Mar 4 06:34:11 2008 +0000

    Add validation to the simple object test values
    
    Like for the simple arrays test case, add validation of the values types
    for the members of the simple objects test case.

 tests/test-parser.c |   31 ++++++++++++++++++++++++-------
 1 files changed, 24 insertions(+), 7 deletions(-)

commit 40b3e9330f482e002aea90b0c1a4b9db2adffff0
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Mar 4 06:27:24 2008 +0000

    Add validation of the simple array test values
    
    Instead of just checking that the array contains something, the simple-array
    test case should validate the contents of the array.
    
    The test now uses a struct defining:
    - the test array
    - the size of the array
    - an element to check
    - the type of the node for the element
    - the type of the value for the node
    
    All the fields are checked for a match. This makes the simple arrays test
    case more reliable.

 tests/test-parser.c |   40 +++++++++++++++++++++++++++++++---------
 1 files changed, 31 insertions(+), 9 deletions(-)

commit 7e6dab14302b94979672acf81eec8710ea95e288
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sun Mar 2 17:44:27 2008 +0000

    Add array-test to the JSON-GLib types unit tests
    
    This simple unit will test the JsonArray API, as part of the coverage
    test for the JSON-GLib types.

 json-glib/tests/Makefile.am  |   10 ++++++--
 json-glib/tests/array-test.c |   50 ++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 57 insertions(+), 3 deletions(-)

commit 441ee88a6e024fc5ab2cf8355adad1fecc276088
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sun Mar 2 15:09:05 2008 +0000

    Coalesce test-03 into test-parser
    
    The third test under the tests/ directory was the last JsonParser test,
    dealing with object parsing. Now, test-parser is complete and contains
    all the JsonParser test cases. It still needs further testing to
    verify the DOM created by the parser object.

 tests/test-02.c     |  225 ---------------------------------------------------
 tests/test-03.c     |  214 ------------------------------------------------
 tests/test-parser.c |  167 ++++++++++++++++++++++++++++++++++++--
 3 files changed, 161 insertions(+), 445 deletions(-)

commit 71db86d84a5544d603b03721891e0ad14f92178d
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sun Mar 2 14:58:58 2008 +0000

    Update the tests build to be a testing unit
    
    Instead of having stand alone tests, use the GTest framework and start
    coalescing multiple test cases into one.
    
    The tests directory will be used for JsonParser, JsonGenerator and
    the JSON-GObject integration API, by reusing the previous test cases
    and remolding them into a more interesting test framework.

 tests/Makefile.am |   39 +++++----------------------------------
 1 files changed, 5 insertions(+), 34 deletions(-)

commit 1e6aa16a2a6432cf96d0a86d4650c13e63c67e43
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sun Mar 2 14:56:56 2008 +0000

    Remove old, empty string test

 tests/test-01.c |   57 -------------------------------------------------------
 1 files changed, 0 insertions(+), 57 deletions(-)

commit 989c807fd61cc65c1e4058c5d0794ae2fe438ba1
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sun Mar 2 14:56:28 2008 +0000

    Rename JsonParser test, and coaelesce basic parser and array tests
    
    Instead of using a single test for empty strings and another test for
    arrays, merge the two into a single test unit, using the GTest API.
    
    The JsonObject parsing test will also be merged later.

 tests/test-parser.c |  262 +++++++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 262 insertions(+), 0 deletions(-)

commit f1e1c0e7796903abb725e8216fc54f53573ecdc9
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sun Mar 2 10:51:09 2008 +0000

    Port the empty string test to the GLib testing framework
    
    The old test-01 program tested the JsonParser with an empty string; instead
    of relying on the exit code and error messages on screen, it shoul use the
    new GTest API.
    
    This is the first test of the old test suite to be ported to the new test
    framework API.

 tests/test-01.c |   44 +++++++++++++++++++++++++++++++++++---------
 1 files changed, 35 insertions(+), 9 deletions(-)

commit cb5b3d5fa6244b0d20258203bd9df7e3148af57b
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sun Mar 2 10:50:17 2008 +0000

    Add a JsonNode copy test unit
    
    The test unit copies a NULL JsonNode and checks that the copy and the
    original nodes are equivalent.

 json-glib/tests/node-test.c |   15 +++++++++++++++
 1 files changed, 15 insertions(+), 0 deletions(-)

commit 40c757835e329fe01f8f22aba74d2e47f3a5e55c
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sun Mar 2 10:49:52 2008 +0000

    Update Makefile templates to include the testing framework

 contrib/Makefile.am       |    2 ++
 doc/Makefile.am           |    2 ++
 doc/reference/Makefile.am |    1 +
 tests/Makefile.am         |   38 ++++++++++++++++++++++++++++++++------
 4 files changed, 37 insertions(+), 6 deletions(-)

commit 75939c2b43430583150b18f0a8e82e3d60a4f4f1
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Mar 1 19:35:47 2008 +0000

    Update gitignore file

 .gitignore |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

commit e4be0d896359cc1d0ba99dd81a66855389ebd5df
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Mar 1 19:30:41 2008 +0000

    Add initial test suite support using GLib's new testing framework
    
    GLib 2.15 added a new test unit framework to the GLib API. It allows
    integrating unit testing into GLib and GObject based libraries and
    applications.
    
    It requires a specially crafter Makefile holding a set of declarations,
    which must be included into the project own Makefile templates; then
    it is possible to drop tests inside a subdirectory, which will be built
    after the library or application, and executed upon "make check".
    
    At the moment, there is a simple test for the JsonNode API, with a
    single unit for the "null" node type.

 Makefile.am                 |    4 ++-
 Makefile.decl               |   57 +++++++++++++++++++++++++++++++++++++++++++
 configure.ac                |    3 +-
 json-glib/Makefile.am       |    9 ++++++-
 json-glib/tests/Makefile.am |   15 +++++++++++
 json-glib/tests/node-test.c |   27 ++++++++++++++++++++
 6 files changed, 112 insertions(+), 3 deletions(-)

commit d313aa1e9e472834252ec173c0409eba11ebcff9
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Feb 29 16:40:33 2008 +0000

    Update gitignore

 .gitignore |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit 8a2bb3c4400b9df6cd864eb29920a7767e8170c7
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Feb 29 16:37:18 2008 +0000

    Sanitize JsonScanner code
    
    Use a closure instead of (*eugh*) an array of gpointers and casting
    to void*.
    
    Also, use the Slice allocator for the ScannerKey structs.

 json-glib/json-scanner.c |   42 ++++++++++++++++++++----------------------
 1 files changed, 20 insertions(+), 22 deletions(-)

commit 42f7800c5b1c30ff187fc824a9bb39565033488e
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Feb 29 16:01:48 2008 +0000

    Update JsonParser to fix compilation
    
    JsonParser now uses JsonScanner, the internal copy of GScanner.

 json-glib/json-parser.c |   33 +++++++++++++++++----------------
 1 files changed, 17 insertions(+), 16 deletions(-)

commit 314f24fd0c8c6b024c93b1d8d275f9049ef22951
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Feb 29 16:00:55 2008 +0000

    Completely internalize the JsonScanner
    
    Rename all the API and the data types to the Json namespace, so we can
    use the internal copy instead of GScanner.

 json-glib/json-scanner.c |  639 +++++++++++++++++++++++-----------------------
 json-glib/json-scanner.h |    6 +-
 2 files changed, 328 insertions(+), 317 deletions(-)

commit 65708000ab02d0a4080b662bb409ac4b79101488
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Feb 29 16:00:30 2008 +0000

    Add JsonScanner to the build

 json-glib/Makefile.am |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

commit 8e27ac27a9b22361296564d740301c2c49b387f8
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Feb 29 15:59:57 2008 +0000

    Bump up autotools requirements
    
    Do not require an ancient version of automake, and settle for one slightly
    less ancient.

 configure.ac |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit a475b0896d5760c893a099c9411f9790e5c492ba
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Feb 29 12:24:14 2008 +0000

    Update the JsonScanner default configuration

 json-glib/json-scanner.c |   84 +++++++++++++++++++--------------------------
 1 files changed, 36 insertions(+), 48 deletions(-)

commit 10ac1734b326700257ef318d9a2000c538b5cd38
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Feb 29 12:22:02 2008 +0000

    Use JsonScanner API into JsonParser
    
    Rename the GScanner function calls into JsonScanner, to see what we
    actually need to have public.
    
    Also, remove the configuration: JsonScanner will provide us with one.

 json-glib/json-parser.c |  127 ++++++++++++++++------------------------------
 1 files changed, 44 insertions(+), 83 deletions(-)

commit 4a4095c360fc29f766e8baba3529a78b6d736b19
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Feb 29 12:21:20 2008 +0000

    Add json-scanner.h to the exported headers

 json-glib/json-glib.h |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit 469a22e4f1fac6b4fd8110823322b7fbfa9b6552
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Feb 29 12:13:54 2008 +0000

    Include JsonScanner into JsonParser

 json-glib/json-parser.c |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit 8537549a5a65f3111a4436b69499664c167b1534
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Feb 29 12:10:16 2008 +0000

    Move JsonTokenType into JsonScanner
    
    The GTokenType extension enumeration belongs with the tokenizer.

 json-glib/json-parser.h |   15 ++-------------
 1 files changed, 2 insertions(+), 13 deletions(-)

commit 1ddd45d36a3a25aa86a95c60e0c29e83687971bd
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Feb 29 12:06:19 2008 +0000

    Copy GScanner into JSON-GLib as JsonScanner
    
    Instead of writing our tokenizer we can fork GScanner and make a
    specialized version for JSON (as per RFC), luckily the licenses
    are compatible (LGPLv2.1 with "any later" clause).
    
    GScanner does not support Unicode "\uNNNN" escaping and we need to
    ensure UTF-8 strings as well.
    
    The API will mostly be the same, but the generic bits not used by
    JsonParser will be hidden: this is, after all, a specialized
    tokenizer.

 json-glib/json-scanner.c | 1809 ++++++++++++++++++++++++++++++++++++++++++++++
 json-glib/json-scanner.h |  167 +++++
 2 files changed, 1976 insertions(+), 0 deletions(-)

commit 3a9ec8f1ca9bf525875c3fbfaf1ab2f3c708bf36
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Jan 29 19:13:15 2008 +0000

    Update the JSON-GLib Vala bindings
    
    Add a dependencies file, so that valac can simply use the json-glib-1.0
    package and correcly chain up all the dependencies needed (at the moment,
    only glib-2.0).
    
    Update the vapi file to match with the GLib bindings with regards to the
    out length parameters and some weak pointers. The only way to properly
    solve the weak assignments issue would be to make JsonNode, JsonObject
    and JsonArray proper GObjects, or at least add reference counting to
    JsonNode. Not going to happend in 0.6, but it's worth adding it to the
    1.0 roadmap.

 contrib/json-glib-1.0.deps |    1 +
 contrib/json-glib-1.0.vapi |   14 +++++-----
 contrib/json-test.vala     |   62 +++++++++++++++++++++----------------------
 3 files changed, 38 insertions(+), 39 deletions(-)

commit e8a59f086f43e5abd5414033ea8c9a886eb112ed
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Jan 29 19:12:35 2008 +0000

    Remove % from the pkg-config file rule
    
    Rules starting with '%' are a make-isms, and automake 1.10 complains a
    lot about them.

 Makefile.am |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit b6963328f3d8d8e85ca0b21f9bdeca77b5611019
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Jan 29 18:19:16 2008 +0000

    Remove json_parser_peek_root from the gtk-doc sections
    
    The json_parser_peek_root() function has been removed, and so we do not
    its symbol in the json-glib-sections.txt file anymore.

 doc/reference/json-glib-sections.txt |    1 -
 1 files changed, 0 insertions(+), 1 deletions(-)

commit 48079c2f580171235eecc298b0193022a67e0b79
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Jan 29 18:18:01 2008 +0000

    Update after the JsonParser::get_root change
    
    Do not free the root node returned by the get_root() method in the
    JSON-GObject API and in the JsonParser tests.

 json-glib/json-gobject.c |    4 +---
 tests/test-01.c          |    2 +-
 tests/test-02.c          |    2 --
 tests/test-03.c          |    2 --
 4 files changed, 2 insertions(+), 8 deletions(-)

commit a86a300fdc256ad4270881cf9b7b97367cd87c87
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Jan 29 18:14:49 2008 +0000

    Revert JsonParser::get_root semantics
    
    The get_root() method should not return a copy of the parsed node: it is
    up to the developer copying it, if it needs to be kept around across multiple
    parsing runs.
    
    This commit reverts the 0b6b09c0 commit, by removing the peek_root() method
    and restoring the previous get_root() method behaviour.

 json-glib/json-parser.c |   26 ++------------------------
 json-glib/json-parser.h |    1 -
 2 files changed, 2 insertions(+), 25 deletions(-)

commit 9a167068edcde51b50a15bab4ee8623994eb9c04
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Jan 28 11:02:30 2008 +0000

    Use the normalized member name in has_member
    
    The json_object_has_member() used the passed in member name, instead of
    the correctly normalized one.

 json-glib/json-object.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit f2f08d282ac6bc69ba9029d065979b1332abd5a5
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sun Jan 27 21:26:51 2008 +0000

    Extract the parser state clearing into its own function
    
    The JsonParser object clears its state upon starting the parsing sequence
    or during the instance destruction process. It's worth moving the free
    and unref calls into their own function to be called by the load_from_data()
    and dispose methods. As further optimisation, inlining them should be
    worth as well.

 json-glib/json-parser.c |   51 +++++++++++++++++++++++++++-------------------
 1 files changed, 30 insertions(+), 21 deletions(-)

commit 629d4a54913c578d7b612f10d9b04addc8e0c7fb
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Dec 25 21:44:03 2007 +0000

    Wrap config.h include with conditionals
    
    Including the autotools generated config.h should always be conditional
    on the HAVE_CONFIG_H definitions.

 json-glib/json-array.c     |    2 ++
 json-glib/json-generator.c |    2 ++
 json-glib/json-gobject.c   |    2 ++
 json-glib/json-node.c      |    3 +++
 json-glib/json-object.c    |    2 ++
 5 files changed, 11 insertions(+), 0 deletions(-)

commit e172e9ccec88999e7d8433df08d8d92568537cf7
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Dec 25 21:41:44 2007 +0000

    Kill off a few indirections
    
    Use an intermediary pointer to avoid a lot of pointer dereferences

 json-glib/json-parser.c |   25 ++++++++++++++-----------
 1 files changed, 14 insertions(+), 11 deletions(-)

commit 61a6a144a2182946be4fb975d05e1c26d814c323
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Dec 25 11:55:36 2007 +0000

    Some miscellaneous fixes to the Vala bindings
    
    Expose the properties as members and remove the accessor methods in case
    it's obvious that they are just function proxies.
    
    Also, start binding the basic GObject API, even though no serializable
    support is ready, yet.

 contrib/json-glib-1.0.vapi |   21 ++++++++++--
 contrib/json-object.vala   |   10 ++++-
 contrib/json-test.vala     |   81 ++++++++++++++++++++++++++++++++------------
 3 files changed, 85 insertions(+), 27 deletions(-)

commit 8ec0c93715f6f43e4829a6f3ac534f9ec05e0363
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Dec 25 11:53:04 2007 +0000

    Provide a default implementation of JsonSerializable
    
    The JsonSerializable interface can provide a default implementation, using
    the powers of GTypeInterface. This means that classes implementing the
    interface can opt to implement both, either or none of the JsonSerializable
    methods, and still be able to retain some basic functionality for the methods
    they decide not to implement.

 json-glib/json-gobject.c |  208 ++++++++++++++++++++++++++-------------------
 1 files changed, 120 insertions(+), 88 deletions(-)

commit 5bb6dd7b77dcd0d1996f484990223287d2144ff3
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Dec 25 11:51:20 2007 +0000

    Plug a leak when loading a new buffer with the same parser
    
    When the same JsonParser loads a different buffer it needs to clear out the
    current state; this means clearing the variable_name string it saves when
    the passed JSON stream is a JavaScript assignment.

 json-glib/json-parser.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

commit a90a842f269314c4423de9d84d03391a8efbd7b5
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Dec 25 11:49:20 2007 +0000

    Use gssize for the buffer length parameter
    
    Since we allow a negative value, meaning "take the whole string", for the
    length parameter, when need a signed size_t. This also fixes the bug where
    we implicitly always computed the buffer length and discarded the passed
    length parameter.

 json-glib/json-parser.c |   10 +++++-----
 json-glib/json-parser.h |    2 +-
 2 files changed, 6 insertions(+), 6 deletions(-)

commit 7229b9bf0bd15c6c1e5b695f8e291218a041ab45
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Dec 25 11:47:10 2007 +0000

    Initialise to zero when creating/copying a JsonNode
    
    Avoid feeding garbage to the callers by using g_slice_new0().

 json-glib/json-node.c |    9 +++++----
 1 files changed, 5 insertions(+), 4 deletions(-)

commit ba7282dd23e2980203208cb73942535bfefa5906
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Dec 25 11:45:56 2007 +0000

    Do not leak the intermediate strings when generating JSON
    
    Found this very dumb leak while using Valgrind.

 json-glib/json-generator.c |    6 ++++++
 1 files changed, 6 insertions(+), 0 deletions(-)

commit 193aca9aabbfc3db8e1faca0a65b19ac7ba96341
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Dec 25 11:44:18 2007 +0000

    Do not free the pointer to the boxed type we get when serialising
    
    The pointer returned by g_value_get_boxed() is just a pointer to the internal
    copy inside GValue, and it's not ours to free, as Valgrind gently pointed
    out.

 tests/test-07.c |    2 --
 1 files changed, 0 insertions(+), 2 deletions(-)

commit a6fae2d61b1cfefa742574761edc19c8d6f702f5
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Nov 22 16:00:35 2007 +0000

    Add a simple Vala serialization example
    
    We don't provide the Serializable interface at the moment, because it
    is too much C-oriented. This example shows how to serialize a class in
    Vala to a JSON string.

 contrib/json-object.vala |   40 ++++++++++++++++++++++++++++++++++++++++
 1 files changed, 40 insertions(+), 0 deletions(-)

commit ea6cc8756f70d488eae128e4a01f63ce2766cc3a
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Nov 22 15:59:25 2007 +0000

    Omit the lenght argument now that we provide a default

 contrib/json-test.vala |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 9492f3439dd491bb5afadfe6b2bd49a72ec9bb1e
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Nov 22 15:58:23 2007 +0000

    Fix the Vala bindings
    
    Miscellaneous fixes for the Vala bindings of JSON-GLib:
     * add missing return values for a couple of methods
     * decorate the Object and Array constructors with their C names
     * correctly transfer the ownership when adding members/elements
     * add the non-null value marker for strings
     * provide default values for the length argument in from_data()/to_data()

 contrib/json-glib-1.0.vapi |   20 +++++++++++---------
 1 files changed, 11 insertions(+), 9 deletions(-)

commit a255b4f5eb8769c444a9ac3a4cc7404fccd44ee3
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Nov 22 00:01:37 2007 +0000

    Recurse into the contrib directory only if Vala is available
    
    If Vala is not available then there's no point in getting into the
    contrib directory. This might change in the future, so we already
    have the HAVE_VALA conditional for the Makefiles.

 Makefile.am  |    8 +++++++-
 configure.ac |    3 +++
 2 files changed, 10 insertions(+), 1 deletions(-)

commit aa8911ca4d63bfb3dd34997f9a745d70d12673af
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Wed Nov 21 20:44:08 2007 +0000

    Update the test case for the Vala bindings

 contrib/json-test.vala |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit 7083e9e6733611b5313f0708c4b93b9726ef26d0
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Wed Nov 21 20:43:35 2007 +0000

    Wrap the newly added API in the Vala bindings
    
    Add the Json.Object.dup_member() and Json.Array.dup_element() functions.
    Also, export the JSON_NODE_TYPE() macro as Json.Node.type() method.

 contrib/json-glib-1.0.vapi |    8 ++++++--
 1 files changed, 6 insertions(+), 2 deletions(-)

commit 9d4588e97a88960a4dd6a28debb3cb0f8d75f098
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Wed Nov 21 20:42:07 2007 +0000

    Add symbols of the newly committed API

 doc/reference/json-glib-sections.txt |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

commit cf2eceeb69ccbda4f2ff583ee7869c7fd3cda603
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Wed Nov 21 20:41:42 2007 +0000

    Add API to retrieve copies of the nodes inside objects and arrays
    
    Getting copies of the nodes might work better for high level languages
    binding the JSON-GLib API, because they can manage the lifetime of the
    returned values using their own rules.

 json-glib/json-array.c  |   29 +++++++++++++++++++++++++++++
 json-glib/json-object.c |   29 +++++++++++++++++++++++++++++
 json-glib/json-types.h  |    4 ++++
 3 files changed, 62 insertions(+), 0 deletions(-)

commit 5a4a8761af0562fbee8e1a56ce1771a20c1ad8e3
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Wed Nov 21 20:07:12 2007 +0000

    Fix leaks in the test suite
    
    Dispose the root node when using the JsonParser and JsonGenerator
    objects after the change in sematics for their accessors.

 tests/test-01.c |    2 +-
 tests/test-02.c |    2 ++
 tests/test-03.c |    2 ++
 tests/test-04.c |    8 ++++++++
 tests/test-05.c |    6 ++++++
 5 files changed, 19 insertions(+), 1 deletions(-)

commit ac699263493e09eeb203f9bf88c0a8296f9e4a8f
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Wed Nov 21 20:06:06 2007 +0000

    Free the root node obtained using json_parser_get_root()
    
    Update json_construct_gobject() to the change of behaviour in the
    root node getter function of JsonParser.

 json-glib/json-gobject.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

commit 0b6b09c0fe2fdd21b18593192e7213d1b0098f12
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Wed Nov 21 20:05:07 2007 +0000

    Change json_parser_get_root() semantics
    
    The json_parser_get_root() returns a pointer to the root node. This does
    not conform to the API naming convention inherited from GLib, where
    functions returning an internal pointer are called "peek" and function
    returning a copy are called "get".
    
    Thus, json_parser_get_root() will now return a copy of the root node and
    it is left to the developer to free the returned JsonNode.
    
    A function returning the pointer has also been added, and it's called
    json_parser_peek_root().

 json-glib/json-parser.c |   26 ++++++++++++++++++++++++--
 json-glib/json-parser.h |    2 ++
 2 files changed, 26 insertions(+), 2 deletions(-)

commit 5f110dc5ad338497c95418b9ad1b267c95fb8ded
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Wed Nov 21 18:39:04 2007 +0000

    Add JSON-GLib Vala bindings
    
    Add bindings for the basic JSON-GLib API. GObject API will arrive later.

 Makefile.am                |    2 +-
 configure.ac               |   12 +++++
 contrib/Makefile.am        |    4 ++
 contrib/json-glib-1.0.vapi |  118 ++++++++++++++++++++++++++++++++++++++++++++
 contrib/json-test.vala     |   87 ++++++++++++++++++++++++++++++++
 5 files changed, 222 insertions(+), 1 deletions(-)

commit 557a60b4e0f1fd6fc0fa79efc60f9bfd777e0670
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Wed Nov 21 14:52:15 2007 +0000

    Use a unicode character for the indent-char property of JsonGenerator
    
    The indent character should be any Unicode character available instead
    of a generic char.

 json-glib/json-generator.c |   16 ++++++++--------
 tests/test-05.c            |    6 +++++-
 2 files changed, 13 insertions(+), 9 deletions(-)

commit 5fc37f8f2a1594821623419f75ceaa4b95fe07cf
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Wed Nov 21 01:39:00 2007 +0000

    Add the indent-char property to JsonGenerator
    
    The JsonGenerator:indent-char can be used to control the character that
    indents the lines when pretty printing.

 json-glib/json-generator.c |   54 ++++++++++++++++++++++++++++++++-----------
 1 files changed, 40 insertions(+), 14 deletions(-)

commit 58133b51152ca76b8cb5c93b5991f9b1a565e9a9
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Wed Nov 21 01:20:20 2007 +0000

    Use G_TYPE_DOUBLE when dumping a value.
    
    JsonNode of type value for floating point numbers is G_TYPE_DOUBLE
    and not G_TYPE_FLOAT anymore.

 json-glib/json-generator.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit 80006db7bcea2bd8c44a648a64ba3da6a05a6fd1
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 20 18:30:42 2007 +0000

    Test correct deserialization of enum values
    
    Update the GObject deserialization test suite to check for the correct
    deserialization of the enum/flags values.

 tests/test-08.c |   60 ++++++++++++++++++++++++++++++++++++++++++++++++------
 1 files changed, 53 insertions(+), 7 deletions(-)

commit 1110e098fa879abf7f67f24af2a1b736ce359dd6
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 20 18:20:33 2007 +0000

    Allow deserialization of strings into enums/flags
    
    If the target value is a G_TYPE_ENUM or a G_TYPE_FLAGS we can effectively
    deserialize a string into the corresponding value (or bit mask) using
    the introspection API for the GEnum and GFlags types.
    
    This code is taken from ClutterScript and it was adapted from GtkBuilder.

 json-glib/json-gobject.c |  170 ++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 170 insertions(+), 0 deletions(-)

commit 2674ce68e574cebeca147944cf748b41fbe27507
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 13 11:34:05 2007 +0000

    Bump up to 0.5.0

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit c1547eb3aba6f09b3ce4c23bd66a798e03b35a34
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 13 11:29:19 2007 +0000

    Bump up to 0.4.0

 NEWS         |    9 +++++++++
 configure.ac |    2 +-
 2 files changed, 10 insertions(+), 1 deletions(-)

commit 03325e108e40d5deba979852ee402d7d6579ac81
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 13 11:20:34 2007 +0000

    Fix variable shadowing for distcheck

 json-glib/json-parser.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit afeec9b40468d289351c78007b5122ff716bb977
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 13 11:16:51 2007 +0000

    Add 0.4 symbols index

 doc/reference/json-glib-docs.sgml |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

commit 32023e03ca9c976e66b9af949d4aea36e1d4d874
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 13 10:59:14 2007 +0000

    Change "responsible" to "asked" in the (de)serialization functions docs
    
    We provide fallbacks in case a JsonSerializable object does not translate
    a property into a JSON object member and vice versa.

 json-glib/json-gobject.c |   15 ++++++++-------
 1 files changed, 8 insertions(+), 7 deletions(-)

commit c669a28d37795be68f3a51e9353f6f9d8e695a52
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 13 10:55:23 2007 +0000

    Add new symbols to the documentation

 doc/reference/json-glib-sections.txt |    7 ++++++-
 1 files changed, 6 insertions(+), 1 deletions(-)

commit b83a2bfa96885837ca48bacb6492fd68a2b5b564
Merge: 1f9b3e5 198ed83
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 13 10:51:58 2007 +0000

    Merge branch 'gobject-deserialize' into work

commit 198ed839424dc7791d22dede152f4d7abc16a8b2
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 13 10:51:31 2007 +0000

    Use the fallback value-to-node generator even for serializables
    
    To avoid reimplementing the same code all over again, if the implementation
    of the serialize_property virtual function of JsonSerializable returns NULL
    we will fall back to the simple value-to-node generator we provide for
    non-serializable classes.

 json-glib/json-gobject.c |   17 +++++++++++------
 tests/test-07.c          |   13 +------------
 2 files changed, 12 insertions(+), 18 deletions(-)

commit 10e937a68bd802a4f5948d900aa2201344cfc138
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 13 10:46:02 2007 +0000

    Add test unit for the GObject deserialization

 .gitignore        |    2 +
 tests/Makefile.am |    4 +-
 tests/test-08.c   |  291 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 296 insertions(+), 1 deletions(-)

commit 7b93db7ad996b29a6c576db33803029dc94e16fc
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 13 10:45:23 2007 +0000

    Fix a couple of dumb typos in the GObject deserialization code
    
    We need to skip if the CONSTRUCT_ONLY flag is set, not unset. We also need
    to copy the value from the JSON node into the target GValue, not the other
    way around.

 json-glib/json-gobject.c |    6 ++++--
 1 files changed, 4 insertions(+), 2 deletions(-)

commit 9e61004365982017bfe9b76889e2a7d1a0320350
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 13 10:11:34 2007 +0000

    Update git ignore file

 .gitignore |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

commit 4b496c7d906c81dceafe6a5f442b55b6e161f762
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 13 10:11:00 2007 +0000

    Add node-to-property simple fallback parser for deserialization
    
    The fallback parser for json_construct_gobject() is invoked if the GType
    does not implement the JsonSerializable interface, or if the interface
    was not handling the property.
    
    It will natively convert integers, booleans, strings and double precision
    floating point values; it also handles string vectors in form of arrays.

 json-glib/json-gobject.c |   94 +++++++++++++++++++++++++++++++++++++++++----
 1 files changed, 85 insertions(+), 9 deletions(-)

commit a7c39c910e08093ee0d0723685005623f26b9eae
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 13 09:28:57 2007 +0000

    Add the JsonGenerator:root property
    
    JsonGenerator now has a :root property, so it can be constructed using
    just g_object_new():
    
      generator = g_object_new (JSON_TYPE_GENERATOR,
                                "pretty", TRUE,
                                "indent", 4,
                                "root", node,
                                NULL);
    
    This means that the root node is copied inside the generator, instead of
    just taking ownership (it was quite confusing). The documentation now
    clearly states what happens, and that you can safely free the node after
    feeding it to the JsonGenerator.

 json-glib/json-generator.c |   30 ++++++++++++++++++++++++++++--
 1 files changed, 28 insertions(+), 2 deletions(-)

commit 6132d7325c33e26740b4c955d8ccbe53fd817cd8
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 13 09:26:02 2007 +0000

    Fix member name in json_node_get_value_type()
    
    JsonNode payload is inside a union.

 json-glib/json-node.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit f051b948714e4928a7d7f903e891639ce4ba82fd
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Nov 13 09:17:22 2007 +0000

    Add a GType for JsonNode
    
    We need a GType for nodes if we want to add JsonNode properties or signal
    marshallers to a GObject class. We could use pointers, but we'd loose type
    safety, so it's a no-no.

 json-glib/json-node.c  |   48 ++++++++++++++++++++++++++++++++++++++++++++++++
 json-glib/json-types.h |    8 ++++++--
 2 files changed, 54 insertions(+), 2 deletions(-)

commit 1f9b3e50282f8aa4a421c83ad596f6186ef82ec9
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Nov 10 15:12:20 2007 +0000

    When parsing a full assignment, also swallow any trailing semi-colon
    
    There's no end to web developers insanity when they can twist and turn a
    perfectly simple and elegant notation into something that allows lazyness
    and breakage.

 json-glib/json-parser.c |   12 +++++++++++-
 tests/test-02.c         |    1 +
 2 files changed, 12 insertions(+), 1 deletions(-)

commit 261d05a4cdcc1f64824615cdc81b4b467d0a5f57
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Nov 10 02:15:44 2007 +0000

    Add support for parsing assignments
    
    Some JSON web APIs return a full JavaScript assignment instead of just
    the data structure (and I'm looking at you, Tumblr). This is done in clear
    violation of the grammar published in the RFC 4627, and it's evidently
    done because most web developers are too lazy for doing a
    
      var foo = eval('(' + text ')');
    
    and want everything defined for them. JsonParser will blissfully ignore
    the left-hand part of the assignment but, in the interest of the developer
    who cares, will record: 1. that the parsed statement was in fact an
    assignment and 2. the name of the variable used.
    
    The function json_parser_has_assignment() can be used to query both the
    presence of an assignment and the variable name at the same time.

 doc/reference/json-glib-sections.txt |    1 +
 json-glib/json-parser.c              |   80 +++++++++++++++++++++++++++++++++-
 json-glib/json-parser.h              |    5 ++
 tests/test-02.c                      |    5 ++
 4 files changed, 89 insertions(+), 2 deletions(-)

commit 45c697263364a975fd6a54373f999f2932436b6f
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sat Nov 10 01:26:46 2007 +0000

    Initial implementation of GObject deserialization function
    
    The json_construct_gobject() function takes a GType and a JSON data stream
    and constructs a new instance for the given type. If the type is a
    JsonSerializable, it will use the JsonSerializable interface for parsing
    the JsonNodes of each object member.
    
    This is the initial implementation of the function: the JsonNode-to-GValue
    fallback parser is just a stub.

 doc/reference/json-glib-sections.txt |    1 +
 json-glib/json-gobject.c             |  182 +++++++++++++++++++++++++++++++---
 json-glib/json-gobject.h             |    8 +-
 3 files changed, 177 insertions(+), 14 deletions(-)

commit 4eade1089355ebcf0614d0cfbc9c441513b7d97a
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 29 22:23:36 2007 +0000

    Fix objects test suite to match the arrays one

 tests/test-03.c |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

commit 3948d83795d68d665b8b969c08b6c40498eb2661
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 29 22:23:07 2007 +0000

    More sanity checks for objects
    
    Add a check for commas after complex data types inside object members.

 json-glib/json-parser.c |    8 +++++++-
 1 files changed, 7 insertions(+), 1 deletions(-)

commit 6182457fa305a1f159e9009d3fbef42a93f2768e
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 29 22:17:44 2007 +0000

    Fix the test suite for arrays
    
    Fix a typo in test number 7 (missing comma to separate the C strings) and
    use G_TYPE_DOUBLE instead of G_TYPE_FLOAT for the floating point values.

 tests/test-02.c |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

commit 25cdc18be8acdad54561f919c5805ad4fa9b3ac9
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 29 22:16:31 2007 +0000

    Add more sanity checks to the parser
    
    Catch missing commas after an array element or an object member.

 json-glib/json-parser.c |   10 ++++++++++
 1 files changed, 10 insertions(+), 0 deletions(-)

commit 812422e4ed4df83374cdda6d94637448ab94dfef
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 29 18:18:34 2007 +0000

    Backport fixes from Clutter trunk
    
    The copy of JSON-GLib in Clutter trunk has two fixes for the JsonParser
    object:
    
      * support for negative numbers (ints and floats);
      * correct parse error propagation
    
    which should make the JsonParser hopefully complete.

 json-glib/json-parser.c |  123 +++++++++++++++++++++++++++++++++++++++--------
 1 files changed, 103 insertions(+), 20 deletions(-)

commit 72d007d865a822875dfa311698fb2d13f5d3df69
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 29 18:16:24 2007 +0000

    Check if the payload is set in json_node_free()
    
    Before calling json_object_unref() or json_array_unref() in json_node_free()
    we need to check if the payload of JsonNode is set to avoid a critical.

 json-glib/json-node.c |    6 ++++--
 1 files changed, 4 insertions(+), 2 deletions(-)

commit 59a66484befba457eda2ee7a9540f2b33ff04031
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 16 23:20:22 2007 +0100

    Add test unit for the JsonSerializable interface
    
    This should have been done before relasing 0.2.0. Well, that's what
    point releases are for.

 tests/Makefile.am |    4 +-
 tests/test-07.c   |  265 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 268 insertions(+), 1 deletions(-)

commit 34515af7bb1d69317b9e52d0ced92beaf6770e7d
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 16 23:19:35 2007 +0100

    We need the actual implementation of the JsonSerializable GType function
    
    A placeholder, while syntactically correct, won't do.

 json-glib/json-gobject.c |    6 ++++++
 1 files changed, 6 insertions(+), 0 deletions(-)

commit 0656c4bee8e14c375481c89a62f0e6e95be758ce
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 16 23:18:47 2007 +0100

    Fix the compiler fixes
    
    This is what happens when you fix a compiler warning about a shadowing
    variable and you don't run the test suite to check the results.

 json-glib/json-generator.c |   10 ++++++----
 1 files changed, 6 insertions(+), 4 deletions(-)

commit 88794df33e08cb409f71d1aaf702cd509b600954
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 16 19:53:27 2007 +0100

    Bump up to 0.3.0

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 0ce3bf30d84aedcf5f8f75e6c1112d91dcc1d654
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 16 19:49:42 2007 +0100

    Bump up to 0.2.0

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 77248800533f3dabfb09dfa8ba32e3084ea62d5f
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 16 19:43:27 2007 +0100

    Fix DISTCHECK configure flags

 Makefile.am |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 70be36c97a8cd598af061eb9ac5a9a5852858682
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 16 19:42:05 2007 +0100

    Fix compilation errors with extra maintainer CFLAGS

 json-glib/json-array.c     |    2 +-
 json-glib/json-generator.c |   16 ++++++++--------
 json-glib/json-parser.c    |    4 ++--
 3 files changed, 11 insertions(+), 11 deletions(-)

commit 57c39582818b8a6579fed327f5c6e2fc34e93694
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 16 19:41:18 2007 +0100

    Drop -Wextra from the maintainer CFLAGS
    
    Some autogenerated code caused -Werror to croak, so -Wextra has to go.

 configure.ac |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

commit 9c690da734ee4513f19841f93a08ae35bbaa65b1
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 16 18:20:19 2007 +0100

    Autogenerate the ChangeLog when disting

 Makefile.am |    5 +++++
 1 files changed, 5 insertions(+), 0 deletions(-)

commit 95fc9c4fb5af82c766d2f4f515b361028bc348e7
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 16 18:20:01 2007 +0100

    Fix EXTRA_DIST files for distcheck

 json-glib/Makefile.am |   16 +++++++++-------
 1 files changed, 9 insertions(+), 7 deletions(-)

commit 87a36b8a5e23f3cf80730627f9b89061934a5bbf
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 16 17:40:06 2007 +0100

    Add the JsonSerializable interface
    
    The JsonSerializable interface allows implementations to override the
    GObject-to-JSON serialization process, by providing two virtual methods
    to control the (de)serialization of GObject properties. This way it's
    possible to serialize GObjects with properties holding complex data types.

 doc/reference/json-glib-sections.txt |   15 +++
 json-glib/json-gobject.c             |  188 ++++++++++++++++++++++++++++------
 json-glib/json-gobject.h             |   51 +++++++++
 json-glib/json-types.h               |    1 +
 4 files changed, 224 insertions(+), 31 deletions(-)

commit 85cb0f44c4c7297a75141999674f3eb0fdf6a308
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 16 17:25:08 2007 +0100

    Add a method for getting all the nodes from a JsonObject
    
    To map json_array_get_elements(), a json_object_get_values() method has
    been added which returns the list of JsonNodes contained by a JsonObject.

 doc/reference/json-glib-sections.txt |    1 +
 json-glib/json-object.c              |   41 ++++++++++++++++++++++++++++++++++
 json-glib/json-types.h               |    1 +
 3 files changed, 43 insertions(+), 0 deletions(-)

commit 474ecf1cc6aae35b184edffc75fc8626c3f12f61
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 16 16:40:57 2007 +0100

    Add a note in the JsonObject documentation for the member name normalization

 json-glib/json-object.c |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

commit 93e26b94d9bb1909f3b16a4b0500f27660d7e621
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 16 16:37:01 2007 +0100

    Normalize every member name before using it
    
    Every member name is stored inside the internal hash table of JsonObject
    using a normalized string: every delimiter found matching G_STR_DELIMITERS
    is automatically transformed in an underscore ('_').
    
    This means that "member-name" and "member_name" are completely equivalent
    for a JsonObject.

 json-glib/json-object.c |   31 ++++++++++++++++++++++++++-----
 1 files changed, 26 insertions(+), 5 deletions(-)

commit 73a7671dedfd3bb9bc1a8c197a68dcef90e627f7
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 15 10:28:39 2007 +0100

    Provide an internal g_hash_table_get_keys() and bump down GLib dependency
    
    Even though GLib 2.14 is now available, many systems still come out with
    GLib 2.12. Since we are using just a single 2.14 function for retrieving
    the members from a JsonObject, we can provide an internal version of that
    function and hideit behind a pre-processor macro.

 configure.ac            |    2 +-
 json-glib/json-object.c |   25 +++++++++++++++++++++++++
 2 files changed, 26 insertions(+), 1 deletions(-)

commit 28928a2f1cbe83a2f1bf699c915daa6eca80f587
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 15 10:25:09 2007 +0100

    Add API for removing nodes from arrays and objects
    
    Write and document json_object_remove_member() and json_array_remove_element()
    which can be used to remove a JsonNode from a JsonObject or a JsonArray
    respectively. This way, the JsonObject and JsonArray are API-complete and
    the object model can be manipulated in code.

 doc/reference/json-glib-sections.txt |    2 +
 json-glib/json-array.c               |   18 +++++
 json-glib/json-object.c              |   17 +++++
 json-glib/json-types.h               |  126 +++++++++++++++++----------------
 4 files changed, 102 insertions(+), 61 deletions(-)

commit b3ecd6e2fbdd58250427f406c43d60b8cb8d2644
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Wed Oct 10 12:03:59 2007 +0100

    Parse bare root values
    
    If the root node contains just a bare value (true, false, null, fundamental
    type) then it's still valid JSON.
    
    Also, use the commodity JsonNode API to avoid using values in the parser
    code.

 json-glib/json-parser.c |   79 +++++++++++++++++-----------------------------
 1 files changed, 29 insertions(+), 50 deletions(-)

commit a7839a06da53d32eb372b4813e5883a04e1c36b7
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 9 20:52:56 2007 +0100

    Add the forgotten JsonGenerator type function

 doc/reference/json-glib.types |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit daeef3345c3a7f3325cea8c945f0e1d814defcc1
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 8 18:29:44 2007 +0100

    Add json_node_dup_string()
    
    The newly added json_node_dup_string() is a convenience function for
    getting a copy of the string contained inside a JsonNode.

 doc/reference/json-glib-sections.txt |    1 +
 json-glib/json-node.c                |   20 ++++++++++++++++++++
 json-glib/json-types.h               |    1 +
 3 files changed, 22 insertions(+), 0 deletions(-)

commit b12efcec57fff6e7637fc924fc50333b97eb2594
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Sun Oct 7 00:47:32 2007 +0100

    Fix documentation about the ownership of the nodes
    
    When adding a JsonNode to a JsonObject or a JsonArray, the containers
    take ownership of the node.

 json-glib/json-array.c  |    7 +++++--
 json-glib/json-object.c |   13 ++++++++-----
 2 files changed, 13 insertions(+), 7 deletions(-)

commit bd5a60ca658257752993ccea47950b97cdc45246
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Oct 5 18:24:27 2007 +0100

    Add convenience accessors for fundamental types in JsonNode
    
    This commit adds some convenience accessors for setting and
    getting fundamental types in and from a JsonNode, to avoid
    jumping through all the GValue hoops.

 doc/reference/json-glib-sections.txt |    8 ++
 json-glib/json-node.c                |  201 ++++++++++++++++++++++++++++++++++
 json-glib/json-types.h               |   12 ++
 3 files changed, 221 insertions(+), 0 deletions(-)

commit ad95c8bf8e4103058d42ae71f47e6980e3b52c34
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Oct 5 18:23:15 2007 +0100

    Use doubles when parsing, not floats
    
    GScanner advertise the floating point values as floats, but it really
    uses doubles. Hence, we need to use G_TYPE_DOUBLE when saving the
    parsed constants into a GValue.

 json-glib/json-parser.c |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

commit 220838e4e61c5a8fd9cf627da7309acf44fa82f0
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Oct 5 16:39:10 2007 +0100

    Add line/position getters to JsonParser
    
    Add two methods to JsonParser to retrieve the currently parsed line
    and position within that line. These methods works only while parsing,
    so within the signal handlers and inside subclasses.

 doc/reference/json-glib-sections.txt |    6 ++++
 json-glib/json-parser.c              |   46 +++++++++++++++++++++++++++++++--
 json-glib/json-parser.h              |   21 +++++++++------
 3 files changed, 61 insertions(+), 12 deletions(-)

commit ea5ee264a5b82fd1d09fa84ec81e17c4ea0d0c4a
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Oct 5 15:13:21 2007 +0100

    Document the newly added signals

 json-glib/json-parser.c |   64 +++++++++++++++++++++++++++++++++++++++++++++++
 json-glib/json-parser.h |   10 ++++++-
 2 files changed, 73 insertions(+), 1 deletions(-)

commit fa9d1676da588306be5a14bcab100ad58a41b799
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Oct 5 11:59:44 2007 +0100

    Add more signals to the JsonParser class
    
    JsonParser should emit signals in critical places, like: start/end of
    the parsing process; start and end of a JsonObject and a JsonArray;
    completion of every member and element of a JsonObject and a JsonArray.
    These signals require the addition of some custom marshaller.

 json-glib/json-marshal.list |    4 ++
 json-glib/json-parser.c     |  118 +++++++++++++++++++++++++++++++++++++++++-
 json-glib/json-parser.h     |   25 ++++++++-
 3 files changed, 141 insertions(+), 6 deletions(-)

commit aa2b31234f7cfac63b870e8d9d74e682b3121d4a
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Oct 5 11:57:53 2007 +0100

    Implement the GType functions for JsonObject and JsonArray
    
    The type functions for the JsonObject and JsonArray types were declared,
    albeit with the wrong return value, but not implemented. This commit
    fixed the return value and implements them.
    
    JsonObject and JsonArray are boxed types because we don't need them to
    be GObjects (no signals, no inheritance and their implementation must be
    completely opaque for the developer).

 json-glib/json-array.c  |   13 +++++++++++++
 json-glib/json-object.c |   13 +++++++++++++
 json-glib/json-types.h  |    4 ++--
 3 files changed, 28 insertions(+), 2 deletions(-)

commit bd41854505f47d2176ea4cfba8083ce998c482cc
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 2 12:13:23 2007 +0100

    Document the GObject integration API into the API reference

 doc/reference/json-glib-docs.sgml    |    6 ++++++
 doc/reference/json-glib-sections.txt |    6 ++++++
 2 files changed, 12 insertions(+), 0 deletions(-)

commit cea3f69f2cde1cb4e6ea9242f6014b31864ad80f
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 2 12:12:49 2007 +0100

    Add test case for GObject integration

 .gitignore        |    2 +
 tests/Makefile.am |    4 +-
 tests/test-06.c   |  154 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 159 insertions(+), 1 deletions(-)

commit 3666613e47b66d67a28bc06c6dcf678fe97eae50
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 2 12:11:55 2007 +0100

    Add GObject serialization support for JSON-GLib
    
    This commit adds json-gobject.h and json_serialize_gobject() to
    JSON-GLib, to serialize a GObject instance into a JSON data stream.

 .gitignore               |    1 +
 json-glib/Makefile.am    |    2 +
 json-glib/json-gobject.c |  169 ++++++++++++++++++++++++++++++++++++++++++++++
 json-glib/json-gobject.h |   33 +++++++++
 4 files changed, 205 insertions(+), 0 deletions(-)

commit 8398253c76cf5dda23891b49b1aaa49e57d95a8d
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 2 10:03:00 2007 +0100

    Complete the tests suite with the object deserialization
    
    Add a test unit for JSON object generation using JsonGenerator. The
    empty, simple (1-depth) and complex (nested object and array) cases
    are exercised.
    
    The complex object generation is taken from the RFC 4627, Examples
    section.

 .gitignore        |    2 +
 tests/Makefile.am |    4 +-
 tests/test-05.c   |  217 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 222 insertions(+), 1 deletions(-)

commit 2b25dbfa802f9af6e76fbe72140b687535cae8e5
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Tue Oct 2 08:07:56 2007 +0100

    Add objects support
    
    JsonGenerator can now create objects and array-nested objects, with and without
    pretty printing. The test suite has been updated accordingly.

 json-glib/json-generator.c |  125 ++++++++++++++++++++++++++++++++++++++++++-
 tests/test-04.c            |   68 ++++++++++++++++++++++++
 2 files changed, 190 insertions(+), 3 deletions(-)

commit 326cdead6f1c7b1bbaae0961d28bfe5ca3af0a1a
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 23:07:18 2007 +0100

    Add nested arrays support
    
    JsonGenerator now supports nested arrays, both with and without pretty
    printing. The tests suite has been updated accordingly.

 json-glib/json-generator.c |   10 +++++++
 tests/test-04.c            |   61 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 71 insertions(+), 0 deletions(-)

commit 6f4dd6b154a150e8b4221800b61f85e5c4277d1b
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 22:58:04 2007 +0100

    Simple arrays generation
    
    JsonGenerator now can create simple arrays, with "pretty" enabled and disabled.
    Simple arrays are just one-level, value-only arrays.
    
    The test unit has been updated to exercise this new feature.

 json-glib/json-generator.c |  160 ++++++++++++++++++++++++++++++++++++++++++--
 tests/test-04.c            |   86 ++++++++++++++++++++++--
 2 files changed, 234 insertions(+), 12 deletions(-)

commit 7f0232eaab0af434e2e086c83b68395146e410f9
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 22:22:12 2007 +0100

    Update list of git ignored files

 .gitignore |    5 +++++
 1 files changed, 5 insertions(+), 0 deletions(-)

commit 47b34271f989cb5f2ba01a633d003adb6052cbd1
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 22:20:23 2007 +0100

    Add initial test unit for the JsonGenerator object

 tests/Makefile.am |    4 +++-
 tests/test-04.c   |   29 +++++++++++++++++++++++++++++
 2 files changed, 32 insertions(+), 1 deletions(-)

commit 8edb4ef3232428ac9e548ae6c1dfa2328bf7198c
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 22:19:28 2007 +0100

    Add missing json-generator.h header

 json-glib/json-glib.h |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit f09acae8e0d6ceba5d13de75551491835a7e71de
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 19:49:43 2007 +0100

    Document the new public functions
    
    Now that we moved the constructors and setters for the JSON data types into
    the public symbols we need to document them to get back to 100% doc coverage.

 doc/reference/json-glib-sections.txt |   26 ++++++++++-
 json-glib/json-array.c               |   22 ++++++++++
 json-glib/json-node.c                |   78 ++++++++++++++++++++++++++++++++++
 json-glib/json-object.c              |   15 +++++++
 json-glib/json-types.h               |    2 +
 5 files changed, 141 insertions(+), 2 deletions(-)

commit 228a5e4efe65995778847f48d2be43f3df988e10
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 18:01:20 2007 +0100

    Move data types ctors and setters into the public headers
    
    Now that we are providing a generator class we need to provide the
    constructors and setters for JsonNode, JsonObject and JsonArray. This
    also means that the json-private.h header is now useless, so we can
    remove it from the build and repository.

 json-glib/Makefile.am      |    2 +-
 json-glib/json-array.c     |    1 -
 json-glib/json-generator.c |    1 -
 json-glib/json-node.c      |    1 -
 json-glib/json-object.c    |    1 -
 json-glib/json-parser.c    |    1 -
 json-glib/json-private.h   |   35 -----------------------------------
 json-glib/json-types.h     |   38 +++++++++++++++++++++++++++++++-------
 8 files changed, 32 insertions(+), 48 deletions(-)

commit bfa60e9ef9da71e3c0d171f81cd08e8eac749061
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 17:48:34 2007 +0100

    Add stub class for JsonGenerator
    
    JsonGenerator is an object that creates JSON data streams from a data
    model tree. This commit adds the JsonGenerator class to the build and
    API reference.

 doc/reference/json-glib-docs.sgml    |    1 +
 doc/reference/json-glib-sections.txt |   25 ++++
 json-glib/Makefile.am                |    2 +
 json-glib/json-generator.c           |  255 ++++++++++++++++++++++++++++++++++
 json-glib/json-generator.h           |   82 +++++++++++
 5 files changed, 365 insertions(+), 0 deletions(-)

commit 41849494890f1f51bc7c4429f0ee7b5d168da302
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 16:37:14 2007 +0100

    Fix ids inside the main documentation index

 doc/reference/json-glib-docs.sgml |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

commit c3f8ea960ef7f8733969d9fb0f71531bc7449a16
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 16:25:47 2007 +0100

    Complete API reference of JSON-GLib
    
    With this commit, we reach 100% coverage.

 json-glib/json-parser.h |   19 +++++++++++++++++++
 json-glib/json-types.h  |   20 ++++++++++++++++++++
 2 files changed, 39 insertions(+), 0 deletions(-)

commit 2211e4e60b90b92d868c9b5f6b61e133d2435b4d
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 16:25:11 2007 +0100

    Implement json_node_get_parent()
    
    It seems that the parent accessor fell through. This commit implements
    the declared json_node_get_parent() function.

 json-glib/json-node.c |   16 ++++++++++++++++
 1 files changed, 16 insertions(+), 0 deletions(-)

commit 29feafc236f888021b817fdfe0cfe685f5e3b65e
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 16:16:15 2007 +0100

    Add licensing informations to the source code

 json-glib/json-array.c      |   29 ++++++++++++++++++++++++
 json-glib/json-node.c       |   52 ++++++++++++++++++++++++++++++++++++------
 json-glib/json-object.c     |   34 ++++++++++++++++++++++++---
 json-glib/json-parser.c     |   28 +++++++++++++++++++++-
 json-glib/json-parser.h     |   19 +++++++++++++++
 json-glib/json-types.h      |   35 +++++++++++++++++++++++++++++
 json-glib/json-version.h.in |   19 +++++++++++++++
 7 files changed, 202 insertions(+), 14 deletions(-)

commit 6eb1a5e94957d3555e7de5f6744a8777cd89efaf
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 15:55:04 2007 +0100

    Fix a stray newline in the documentation

 doc/reference/json-glib-docs.sgml |    3 +--
 1 files changed, 1 insertions(+), 2 deletions(-)

commit a5ecf553082816a1ce6c4354ff23e8addf8d9c80
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 15:52:54 2007 +0100

    Update git ignore file

 .gitignore |   22 ++++++++++++++++++++++
 1 files changed, 22 insertions(+), 0 deletions(-)

commit 9bdee4c01adef7e9d7ed18d5dd94671057f1459b
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 15:50:49 2007 +0100

    Add API reference for JSON-GLib
    
    Use gtk-doc to build the various bits and pieces of the API reference
    for JSON-GLib.

 doc/Makefile.am                      |    1 +
 doc/reference/Makefile.am            |    2 +-
 doc/reference/json-glib-docs.sgml    |  153 ++++++++++++++++++++++++++++++++++
 doc/reference/json-glib-sections.txt |   92 ++++++++++++++++++++
 doc/reference/json-glib.types        |    1 +
 json-glib/json-node.c                |    2 +-
 json-glib/json-version.h.in          |    8 ++
 7 files changed, 257 insertions(+), 2 deletions(-)

commit 2e362edd46f11f2fd1fa327877372b902b70c280
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 14:57:39 2007 +0100

    Add more test cases for the object parsing

 tests/test-03.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

commit 79423943a8588a8ed6d5bedbc038255111897261
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 14:57:25 2007 +0100

    Swallow the comma earlier in the parser
    
    The comma is used as a member and element separator, so it should be
    swallowed by the parser as soon as possible.

 json-glib/json-parser.c |   25 ++++++++++++++++---------
 1 files changed, 16 insertions(+), 9 deletions(-)

commit e711b883dba88d68b6986d87f14a06361cf54be7
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 14:46:31 2007 +0100

    Update gitignore

 .gitignore |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

commit 591989c80b16fe68bdd79bcc7759a4249fdaf129
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 14:45:42 2007 +0100

    Test object parsing
    
    Add JSON object parsing testing to the test units.

 tests/Makefile.am |    8 +-
 tests/test-02.c   |   73 +++++++++++++++++-
 tests/test-03.c   |  211 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 285 insertions(+), 7 deletions(-)

commit ba3a6e6afed0d4fe3853b8e7400516557a20f775
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 14:44:51 2007 +0100

    Add JSON object parsing
    
    This commit completes the JsonParser class by adding the ability to
    parse JSON objects, either alone or inside arrays. JsonParser is now
    a JSON parser.

 json-glib/json-parser.c |  235 ++++++++++++++++++++++++++++++++++++++++++++---
 1 files changed, 220 insertions(+), 15 deletions(-)

commit fd89ad3d7127e68df06345fa52863e73ada93689
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 14:43:12 2007 +0100

    Declare json_node_take_object() and json_node_take_array()
    
    JsonParser uses the take variant of JsonNode setters for objects and arrays
    since it's the one creating the objects. This way, we avoid leaks and the
    extra complexity of unreffing the newly created complex containers after
    setting them into the JsonNodes.

 json-glib/json-private.h |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

commit b2ee98f9b0baac019540020e177189b6a3780b83
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 13:01:32 2007 +0100

    Chain up nodes to their parent
    
    When parsing a JSON node we need to correctly set up the parent node
    of the newly created ones.

 json-glib/json-parser.c |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

commit 88b11be5eec1da769328e93189bc2f3316c9cd0a
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Mon Oct 1 12:57:46 2007 +0100

    Add JsonNode, a generic container for JSON types
    
    This huge commit removes JsonData and adds JsonNode, the generic container
    for fundamental and complex data types extracted from a JSON stream. The
    contents of a JsonNode can be extracted from it in form of a GValue for
    fundamental types (integers, floats, strings, booleans) or in form of
    JsonObject and JsonArray objects. JsonObject and JsonArray now accept
    JsonNodes instead of GValues.
    
    The JsonParser object builds the data model tree when parsing a JSON stream;
    the tree can be recursed by getting the root node and walking it using the
    GValue API for the fundamental types and the objects/arrays API for complex
    types.
    
    The API has been updated and the tests now recurse through the generated
    data model tree.

 json-glib/Makefile.am    |    2 +-
 json-glib/json-array.c   |   64 +++++------
 json-glib/json-data.c    |   93 ----------------
 json-glib/json-node.c    |  269 ++++++++++++++++++++++++++++++++++++++++++++++
 json-glib/json-object.c  |   44 ++------
 json-glib/json-parser.c  |   87 +++++++++++----
 json-glib/json-parser.h  |    2 +-
 json-glib/json-private.h |   38 +++----
 json-glib/json-types.h   |   59 ++++++-----
 tests/test-01.c          |    2 +-
 tests/test-02.c          |  112 ++++++++++++++++++-
 11 files changed, 535 insertions(+), 237 deletions(-)

commit c11ebd32f73a1e21d6097bf9eba8e12f7e35497a
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Sep 21 21:07:12 2007 +0100

    Add JsonData, an opaque container for JSON data types
    
    JsonData is like GValue, but it stores JSON data types (objects and
    arrays) and allows us to retrieve them safely. This way we can actually
    know the type of the objects returned by the parser and by the other
    object walking functions.

 json-glib/Makefile.am    |    1 +
 json-glib/json-data.c    |   93 ++++++++++++++++++++++++++++++++++++++++++++++
 json-glib/json-private.h |    7 +++
 json-glib/json-types.h   |   53 ++++++++++++++++++--------
 4 files changed, 138 insertions(+), 16 deletions(-)

commit f661c7e1a04c2fb198279030c9dd812f357240a3
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Sep 21 21:05:12 2007 +0100

    Skip the token check after parsing a nested array
    
    Since there cannot be any other token except for the comma, which we
    eat anyway, there's no point in going through the switch() check
    after we have finished parsing a nested array.

 json-glib/json-parser.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

commit ae3a66e6a90b6cfd71cb8c41c0d752fd1b0a67cc
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Sep 21 20:15:52 2007 +0100

    Update gitignore file

 .gitignore |    7 +++++++
 1 files changed, 7 insertions(+), 0 deletions(-)

commit 7875c5f573fdc6c2a39e958d2032f4c26d1f91ff
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Sep 21 20:14:49 2007 +0100

    Start the test suite
    
    Add the first two test units:
    
      - test-01.c: build/empty test unit
      - test-02.c: array test unit
    
    Every test unit must follow the same naming policy, so we can add
    a run-tests script later on and a pre-commit hook to invoke it
    and catch regressions automagically.

 tests/Makefile.am |   12 ++++++++++++
 tests/test-01.c   |   31 +++++++++++++++++++++++++++++++
 tests/test-02.c   |   52 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 95 insertions(+), 0 deletions(-)

commit 81ad2e5c61db2391d2d98a6b5df1247e3abf16ec
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Sep 21 20:12:02 2007 +0100

    Parse JSON arrays
    
    Add the array parsing code. The parser identifies and builds nested
    levels of arrays, but the storage is not quite right. That is a problem
    of the parser object, though, so this can be considered a first raw
    pass at the problem.

 json-glib/json-parser.c |  114 ++++++++++++++++++++++++++++++++++++++++-------
 1 files changed, 97 insertions(+), 17 deletions(-)

commit b433703db6722785e33f968830e23c5806230ac2
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Sep 21 12:16:15 2007 +0100

    Add RFC 4627 text, where JSON is defined

 doc/rfc4627.txt |  563 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 563 insertions(+), 0 deletions(-)

commit c77af0ec13e3e11cdb784510e6a75125bb8ef667
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Sep 21 12:08:09 2007 +0100

    Top-levels in JSON can only be objects or arrays
    
    JSON is an object serialisation format (thanks, RFC4627), so it can
    only express objects and/or arrays as top-levels.

 json-glib/json-parser.c |   24 ++++++++++++++----------
 1 files changed, 14 insertions(+), 10 deletions(-)

commit 0ff67fb63c5e021b88d6a3d17c5e34dc95ac2676
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Sep 21 11:58:00 2007 +0100

    Update gitignore file

 .gitignore |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

commit d98d8c3d245192abe6ec5a531c9d0d678b07d061
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Sep 21 11:54:40 2007 +0100

    Add stubs to JsonParser for actually parsing a JSON stream
    
    Initial commit for getting JsonParser to work. Because GScanner API
    is old and mostly sucks, we need to do some magic with signals.
    
    If json_parser_load_from_data() fails, the passed GError will be set
    with a JSON_PARSER_ERROR code and message; unfortunately, we can't get
    the nice error message out of GScanner. We can, however, override the
    default message handler and make it emit a signal on the JsonParser
    object.
    
    So, to make a long story short: the GError passed to the load_from_data()
    method is filled with a short error message; the *real* error message
    is passed to the ::error signal handlers so they can actually use it.
    
    GScanner should really get a way to retrieve the last error message.

 json-glib/json-parser.c |  266 ++++++++++++++++++++++++++++++++++++++++++++++-
 json-glib/json-parser.h |   28 +++++-
 2 files changed, 290 insertions(+), 4 deletions(-)

commit cd1040e2fb6f6da50aaf72017746b33234c39704
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Fri Sep 21 11:08:06 2007 +0100

    Add marshallers generation to the build
    
    Use glib-genmarshal to generate the marshallers we need. For the
    time being, we just need a (void,pointer).

 json-glib/Makefile.am       |   30 +++++++++++++++++++++++++-----
 json-glib/json-marshal.list |    1 +
 2 files changed, 26 insertions(+), 5 deletions(-)

commit 821ac3e602f936318f9a2c3b831f135408ca5d74
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Sep 20 20:41:09 2007 +0100

    Add gitignore file

 .gitignore |   29 +++++++++++++++++++++++++++++
 1 files changed, 29 insertions(+), 0 deletions(-)

commit c5bfb22f964b8f1feecdc8fb29d8a74b36861d32
Author: Emmanuele Bassi <ebassi@openedhand.com>
Date:   Thu Sep 20 17:33:28 2007 +0100

    Initial import of JSON-GLib
    
    JSON-GLib is a JSON parser library written with GLib and GObject.
    
    JSON is the JavaScript Object Notation, and it's used to define objects
    and object hierarchies in a human-readable way.

 AUTHORS                           |    1 +
 COPYING                           |  504 +++++++++++++++++++++++++++++++++++++
 ChangeLog                         |    6 +
 Makefile.am                       |   15 ++
 README                            |   39 +++
 autogen.sh                        |    4 +
 configure.ac                      |  119 +++++++++
 doc/reference/Makefile.am         |   82 ++++++
 doc/reference/version.xml.in      |    1 +
 json-glib.pc.in                   |   11 +
 json-glib/Makefile.am             |   52 ++++
 json-glib/json-array.c            |  176 +++++++++++++
 json-glib/json-glib.h             |    8 +
 json-glib/json-object.c           |  201 +++++++++++++++
 json-glib/json-parser.c           |  152 +++++++++++
 json-glib/json-parser.h           |   57 +++++
 json-glib/json-private.h          |   26 ++
 json-glib/json-types.h            |   32 +++
 json-glib/json-version.h.in       |   65 +++++
 19 files changed, 1551 insertions(+), 0 deletions(-)
