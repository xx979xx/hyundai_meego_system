/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c MICOMIf -p MICOMIf.h:MICOMIf.cpp com.lge.car.micom.dtc.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef MICOMIF_H_1341827601
#define MICOMIF_H_1341827601

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.lge.car.micom.dtc
 */
class MICOMIf: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.lge.car.micom.dtc"; }

public:
    MICOMIf(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~MICOMIf();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QByteArray> LgeDBus_CANTPSendMsg(const QByteArray &in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return asyncCallWithArgumentList(QLatin1String("LgeDBus_CANTPSendMsg"), argumentList);
    }

    inline QDBusPendingReply<QByteArray> LgeDBus_DTCClearRequest(uchar in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return asyncCallWithArgumentList(QLatin1String("LgeDBus_DTCClearRequest"), argumentList);
    }

    inline QDBusPendingReply<QByteArray> LgeDBus_DTCReadRequest(uchar in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return asyncCallWithArgumentList(QLatin1String("LgeDBus_DTCReadRequest"), argumentList);
    }

    inline QDBusPendingReply<> LgeDBus_DTCSendMsg(const QByteArray &in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return asyncCallWithArgumentList(QLatin1String("LgeDBus_DTCSendMsg"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace com {
  namespace lge {
    namespace car {
      namespace micom {
        typedef ::MICOMIf dtc;
      }
    }
  }
}
#endif
