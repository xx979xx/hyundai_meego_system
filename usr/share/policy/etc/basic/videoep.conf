[atom]
appmenu  = _HILDON_WM_WINDOW_TYPE_APP_MENU
menu     = _NET_WM_WINDOW_TYPE_MENU
dialog   = _NET_WM_WINDOW_TYPE_DIALOG
applic   = _NET_WM_WINDOW_TYPE_NORMAL
desktop  = _NET_WM_WINDOW_TYPE_DESKTOP
notify   = _NET_WM_WINDOW_TYPE_NOTIFICATION
pal      = PAL
ntsc     = NTSC
normal   = "4:3"
wide     = "16:9"

[output-property]
TV:ratio   = atom, TVAspectRatio
TV:signal  = atom, SignalProperties 

[window-property]
wmpid       = cardinal, _NET_WM_PID
clients     = window,   _NET_CLIENT_LIST_STACKING
wmclass     = string,   WM_CLASS
wmname      = string,   WM_NAME
wintype     = atom,     _NET_WM_WINDOW_TYPE
rotation    = cardinal, _MAEMO_ROTATION_TRANSITION

[mode]                                            
"768x576" = 0, 768,576

[device]
type     = builtin
screen   = 0
crtc     = 1
position = 0,0

[device]
type     = builtinandtvout
screen   = 0
crtc     = 1
position = 0,0
mode     = "854x480"
output   = TV

[output-signal]
type     = pal
output   = "TV"
property = signal:pal

[output-signal]
type     = ntsc
output   = "TV"
property = signal:ntsc

[output-ratio]
type     = normal
output   = "TV"
property = ratio:normal

[output-ratio]
type     = wide
output   = "TV"
property = ratio:wide

[sequence]
name = classify_window
step-until = first-failure
step = function:test(window-property:wintype, integer:1,atom:applic)
step = function:test(window-property:wmname, integer:0,string:'sysuid')
step = function:classify_window(window-id, string:'application-window')

[sequence]
name = active_ui_iconized
step-until = first-failure
step = function:test(application-property:wmname, integer:1,string:'duihome')
step = resolver:active_ui_change_request(appwin=integer:0, \
                                         pid=integer:0,    \
					 iconize=integer:1)

[sequence]
name = change_active_ui
step-until = first-success
step = sequence:active_ui_iconized
step = resolver:active_ui_change_request(appwin=application-window-id,       \
                                         pid=application-property:wmpid,     \
					 iconize=integer:0)

[sequence]
name = change_active_window
step-until = first-failure
step = function:set_appwin_if_needed(window-id,               \
                                     application-window-id,   \
                                     root-property:clients)
step = sequence:change_active_ui

[sequence]
name = set_appwin_from_list
step-until = first-failure
step = function:set_appwin_if_needed(application-window-id, \
                                     root-property:clients)
step = sequence:change_active_ui
 
[sequence]
name = process_window_list
step-until = first-success
step = function:set_newwin(application-window-id, root-property:clients)
step = sequence:set_appwin_from_list

[root-window]
property = clients => sequence:process_window_list

[new-window]
property = wintype => sequence:classify_window
property = wmname  => sequence:classify_window
                                               
[application-window]
property = wmpid => sequence:change_active_window 
