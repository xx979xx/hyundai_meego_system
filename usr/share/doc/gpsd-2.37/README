$Id: README 4447 2007-12-05 11:22:48Z esr $

COPYRIGHT
=========

This software (gpsd) released under the terms and conditions of the BSD
License, a copy of which is included in the file COPYING.

GENERAL
=======

gpsd is a userland daemon acting as a translator between GPS or
Loran-C receivers and clients. gpsd listens on port 2947 for clients
requesting position/time/velocity information.  The receivers are
expected to generate position information in a well-known format -- as
NMEA-0183 sentences, SiRF binary, Rockwell binary, Garmin binary
format, or other vendor binary protocols.  gpsd takes this
information from the GPS and translates it into something uniform and
easier to understand for clients.  The distribution includes sample
clients, application interface libraries, and test/profiling tools.

There is a project site for gpsd at <http://gpsd.berlios.de/>.
Look there for updates, news, and project mailing lists.  See that
website for a list of GPS units known to be compatible.

See the file INSTALL for installation instructions and some tips on
how to troubleshoot your installation.

Distro integrators: An RPM spec file is included in the gpsd
distribution.  It wants to set up a hotplug script to notify gpsd
when a potential GPS device goes active and should be polled.  The
goal is zero configuration; users should never have to tell gpsd how
to configure itself.  If you can't use RPM, use what you see in the
specfile as a model.

1.X CREDITS
===========

Remco Treffkorn designed and originated the code.

Russ Nelson maintained gpsd for a couple of years.

Carsten Tschach's gpstrans-0.31b code was the original model for nmea_parse.c.

Bob Lorenzini <hwm@netcom.com> provided testing and feedback.

Brook Milligan <brook@trillium.NMSU.Edu> combined gpsd and gpsclient
into one package and autoconfiscated it.

Derrick J. Brashear <shadow@dementia.org> (KB3EGH) added code for the
EarthMate DeLorme. He also added "incredibly gross code to output
NMEA sentences" (his own words :-) He also did the first cut at
DGPS support (see http://www.wsrcc.com/wolfgang/gps/dgps-ip.html), 
for the Earthmate.

Curt Mills <BowHunter@mail.com> (WE7U) furthered the dgps support,
writing the portion for other GPS receivers.

None of these people are active in 2.X, through Remco de-lurks on the
mailing list occasionally.

2.X CREDITS
===========

Eric S. Raymond drastically rewrote this code to clean it up and extend it.
The 2.X architecture has become significantly different and far more 
modularized.

His new features include:
   * Documentation (what a concept!)
   * Cleaned up, simplified command-line options.
   * Now understands the GLL (Geographic position - Latitude, Longitude)
     sentence from NMEA 3.0. 
   * Now parses both the NMEA 3.01 and pre-3.01 variants of the VTG sentence 
     correctly.
   * New 'y' command supports satellite location -- it should no longer ever
     be necessary for clients to go to raw mode unless they want to monitor and
     and log the NMEA stream itself.
   * New 'w' command toggles 'watcher' mode. In watcher mode gpsd ships
     a gpsd-style response for each incoming sentence as if the client
     had just sent all commands that asked for data contained in the sentence.
   * New 'x' command allows the client to query whether or not the GPS
     is on-line.
   * Massive refactoring -- one main loop now calls a self-contained
     driver object for each type.
   * The GPS-bashing code the daemon uses can now be directly linked as a
     library, libgpsd(3). 
   * C and Python libraries are available to encapsulate the client side of
     querying gpsd, see libgps(3).
   * Cleaned-up error reporting, we don't use syslog when running in foreground
     but send all error and status messages to the tty instead.
   * Added -n option to do batch monitoring of GPSes.
   * xgpsspeed is working again; xgps has been seriously reworked and improved.
   * RPMs which include installation of gpsd to start up at boot time 
     are available.
   * New gpsprobe program probes the capabilities of GPSes and generates
     error scattergrams from fixes.  (Later this moved to gpsprof.)
   * Autobauding, self-configuration, and hotplugging.  gpsd can now get
     its device from a hotplug script, and figures out itself which baud 
     rate to use and what the GPS's device type is.
   * More new commands: 'I', 'U', 'E', 'B', 'Z'. See the docs.
   * Support for SiRF binary mode.
   * Support for multiple devices.
   * Other test tools -- gpsfake, gpscat.

Chris Kuethe <ckuethe@mail.berlios.de> maintains the OpenBSD port, shipped
the 2.34 release, is our SiRF and low-level protocols expert, and does a 
lot of general hacking and support.

Gary Miller <gem@rellim.com> wrote the driver for Garmin binary protocol.

Amaury Jacquot <sxpert@esitcom.org> added DBUS support.

Ville Nuorvala <vnuorval@tcs.hut.fi> wrote the NTRIP support.

We are delighted to acknowlege the assistance of Carl Carter, a field
application engineer at SiRF.  He assisted us with the correction and
tuning of the SiRF binary-protocol driver, shedding a good deal of 
light on murky aspects of the chip's behavior.

We are delighted to acknowlege the assistance of Timo Ylhainen, VP of
Software Operations at Fastrax. He clarified a number of points about
the iTalk protocol, helping to further development of iTalk support.
