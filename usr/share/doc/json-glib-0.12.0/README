JSON-GLib - A JSON parser for GLib-based libraries and applications
===============================================================================

JSON-GLib implements a full JSON parser using GLib and GObject.

Use JSON-GLib it is possible to parse and generate valid JSON data
structures, using a DOM-like API. JSON-GLib also offers GObject
integration, providing the ability to serialize and deserialize
GObject instances to and from JSON data types.

JSON is the JavaScript Object Notation; it can be used to represent
objects and object hierarchies while retaining human-readability.

GLib is a C library providing common and efficient data types for
the C developers.

GObject is a library providing a run-time Object Oriented type system
for C developers. GLib and GObject are extensively used by the GTK+
toolkit and by the GNOME project.

For more information, see:
  • JSON: http://www.json.org
  • GLib and GObject: http://www.gtk.org

REQUIREMENTS
------------
In order to build JSON-GLib you will need:

  • pkg-config
  • gtk-doc ≥ 1.13
  • GLib, GIO ≥ 2.16

Optionally, JSON-GLib depends on:

  • GObject-Introspection ≥ 0.9.5

INSTALLATION
-------------------------------------------------------------------------------
To build JSON-GLib just run:

  $ ./configure
  $ make all
  # make install

BUGS
-------------------------------------------------------------------------------
If you find a bug in JSON-GLib, please create a Bugzilla entry here:

  http://bugzilla.gnome.org/enter_bug.cgi?product=json-glib

Attaching:

  • the version of JSON-GLib
    ◦ if it is a development version, the branch of the git repository
  • the JSON data that produced the bug (if any)
  • a small test case, if none of the test units exhibit the behaviour
  • in case of a segmentation fault, a full stack trace with debugging
    symbols obtained through gdb is greatly appreaciated

RELEASE NOTES
-------------------------------------------------------------------------------
• Prior to JSON-GLib 0.10, a JsonSerializable implementation could
  automatically fall back to the default serialization code by simply
  returning NULL from an overridden JsonSerializable::serialize_property()
  virtual function. Since JSON-GLib 0.10 this is not possible any more. A
  JsonSerializable is always expected to serialize and deserialize all
  properties. JSON-GLib provides public API for the default implementation
  in case the serialization code wants to fall back to that.

HACKING
-------------------------------------------------------------------------------
JSON-GLib is developed mainly inside a GIT repository available at:

  http://git.gnome.org/browse/json-glib

You can clone the GIT repository with:

  git clone git://git.gnome.org/json-glib

If you want to contribute functionality or bug fixes to JSON-GLib you
can either notify me to pull from your GIT repository or send me a set
of patches using:

  git format-patch master -k -s

or:

  git send-email -k -s

Make sure you always run the test suite when you are fixing bugs. New
features should come with a test unit.

AUTHOR, COPYRIGHT AND LICENSING
-------------------------------------------------------------------------------
JSON-GLib has been written by Emmanuele Bassi

JSON-GLib is released under the terms of the GNU Lesser General Public License,
either version 2.1 or (at your option) any later version.

See the file COPYING for details.

Copyright (C) 2007, 2008  OpenedHand Ltd
Copyright (C) 2009, 2010  Intel Corp.
